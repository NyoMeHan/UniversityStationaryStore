//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_Acknowledgement_Stock_Item", "Stock_Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Stock_Item), "Acknowledgement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.Acknowledgement), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_AdjustmentDetail_Adjustment", "Adjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Adjustment), "AdjustmentDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.AdjustmentDetail), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_AdjustmentDetail_Stock_Item", "Stock_Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Stock_Item), "AdjustmentDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.AdjustmentDetail), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_Stock_Item_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Category), "Stock_Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.Stock_Item), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_Stock_Item_Category1", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Category), "Stock_Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.Stock_Item), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_Department_CollectionPoint", "CollectionPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.CollectionPoint), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.Department), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_DeptRequisition_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Department), "DeptRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.DeptRequisition), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_EmpRequisition_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Department), "EmpRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.EmpRequisition), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_Pending_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Department), "Pending", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.Pending), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_PurchaseOrder_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Department), "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_DeptRequisitionDetail_DeptRequisition", "DeptRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.DeptRequisition), "DeptRequisitionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.DeptRequisitionDetail), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_Disbursement_DeptRequisition", "DeptRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.DeptRequisition), "Disbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.Disbursement), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_DeptRequisitionDetail_EmpRequisition", "EmpRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.EmpRequisition), "DeptRequisitionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.DeptRequisitionDetail), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_Pending_Disbursement", "Disbursement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Disbursement), "Pending", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.Pending), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_DisbursementDetail_Stock_Item", "Stock_Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Stock_Item), "DisbursementDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.DisbursementDetail), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_EmpRequisition_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Employee), "EmpRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.EmpRequisition), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_EmpRequisitionDetail_EmpRequisition", "EmpRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.EmpRequisition), "EmpRequisitionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.EmpRequisitionDetail), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_EmpRequisitionDetail_Stock_Item", "Stock_Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Stock_Item), "EmpRequisitionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.EmpRequisitionDetail), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_Pending_Detail_Pending", "Pending", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Pending), "Pending_Detail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.Pending_Detail), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_Pending_Detail_Stock_Item", "Stock_Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Stock_Item), "Pending_Detail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.Pending_Detail), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_PurchaseOrder_Supplier", "Supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Supplier), "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_PurchaseOrderDetail_PurchaseOrder", "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.PurchaseOrder), "PurchaseOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.PurchaseOrderDetail), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_PurchaseOrderDetail_Stock_Item", "Stock_Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Stock_Item), "PurchaseOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.PurchaseOrderDetail), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_RetrievalDetail_RetrievalMaster", "RetrievalMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.RetrievalMaster), "RetrievalDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.RetrievalDetail), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_RetrievalDetail_Stock_Item", "Stock_Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Stock_Item), "RetrievalDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.RetrievalDetail), true)]
[assembly: EdmRelationshipAttribute("Team4_ADModel", "FK_StockHistory_Stock_Item", "Stock_Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BizLogic.Stock_Item), "StockHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BizLogic.StockHistory), true)]

#endregion

namespace BizLogic
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Team4_ADEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Team4_ADEntities object using the connection string found in the 'Team4_ADEntities' section of the application configuration file.
        /// </summary>
        public Team4_ADEntities() : base("name=Team4_ADEntities", "Team4_ADEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Team4_ADEntities object.
        /// </summary>
        public Team4_ADEntities(string connectionString) : base(connectionString, "Team4_ADEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Team4_ADEntities object.
        /// </summary>
        public Team4_ADEntities(EntityConnection connection) : base(connection, "Team4_ADEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Acknowledgement> Acknowledgements
        {
            get
            {
                if ((_Acknowledgements == null))
                {
                    _Acknowledgements = base.CreateObjectSet<Acknowledgement>("Acknowledgements");
                }
                return _Acknowledgements;
            }
        }
        private ObjectSet<Acknowledgement> _Acknowledgements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Adjustment> Adjustments
        {
            get
            {
                if ((_Adjustments == null))
                {
                    _Adjustments = base.CreateObjectSet<Adjustment>("Adjustments");
                }
                return _Adjustments;
            }
        }
        private ObjectSet<Adjustment> _Adjustments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdjustmentDetail> AdjustmentDetails
        {
            get
            {
                if ((_AdjustmentDetails == null))
                {
                    _AdjustmentDetails = base.CreateObjectSet<AdjustmentDetail>("AdjustmentDetails");
                }
                return _AdjustmentDetails;
            }
        }
        private ObjectSet<AdjustmentDetail> _AdjustmentDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Authentication> Authentications
        {
            get
            {
                if ((_Authentications == null))
                {
                    _Authentications = base.CreateObjectSet<Authentication>("Authentications");
                }
                return _Authentications;
            }
        }
        private ObjectSet<Authentication> _Authentications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CollectionPoint> CollectionPoints
        {
            get
            {
                if ((_CollectionPoints == null))
                {
                    _CollectionPoints = base.CreateObjectSet<CollectionPoint>("CollectionPoints");
                }
                return _CollectionPoints;
            }
        }
        private ObjectSet<CollectionPoint> _CollectionPoints;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DepartmentRep> DepartmentReps
        {
            get
            {
                if ((_DepartmentReps == null))
                {
                    _DepartmentReps = base.CreateObjectSet<DepartmentRep>("DepartmentReps");
                }
                return _DepartmentReps;
            }
        }
        private ObjectSet<DepartmentRep> _DepartmentReps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeptRequisition> DeptRequisitions
        {
            get
            {
                if ((_DeptRequisitions == null))
                {
                    _DeptRequisitions = base.CreateObjectSet<DeptRequisition>("DeptRequisitions");
                }
                return _DeptRequisitions;
            }
        }
        private ObjectSet<DeptRequisition> _DeptRequisitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeptRequisitionDetail> DeptRequisitionDetails
        {
            get
            {
                if ((_DeptRequisitionDetails == null))
                {
                    _DeptRequisitionDetails = base.CreateObjectSet<DeptRequisitionDetail>("DeptRequisitionDetails");
                }
                return _DeptRequisitionDetails;
            }
        }
        private ObjectSet<DeptRequisitionDetail> _DeptRequisitionDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Disbursement> Disbursements
        {
            get
            {
                if ((_Disbursements == null))
                {
                    _Disbursements = base.CreateObjectSet<Disbursement>("Disbursements");
                }
                return _Disbursements;
            }
        }
        private ObjectSet<Disbursement> _Disbursements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisbursementDetail> DisbursementDetails
        {
            get
            {
                if ((_DisbursementDetails == null))
                {
                    _DisbursementDetails = base.CreateObjectSet<DisbursementDetail>("DisbursementDetails");
                }
                return _DisbursementDetails;
            }
        }
        private ObjectSet<DisbursementDetail> _DisbursementDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmpRequisition> EmpRequisitions
        {
            get
            {
                if ((_EmpRequisitions == null))
                {
                    _EmpRequisitions = base.CreateObjectSet<EmpRequisition>("EmpRequisitions");
                }
                return _EmpRequisitions;
            }
        }
        private ObjectSet<EmpRequisition> _EmpRequisitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmpRequisitionDetail> EmpRequisitionDetails
        {
            get
            {
                if ((_EmpRequisitionDetails == null))
                {
                    _EmpRequisitionDetails = base.CreateObjectSet<EmpRequisitionDetail>("EmpRequisitionDetails");
                }
                return _EmpRequisitionDetails;
            }
        }
        private ObjectSet<EmpRequisitionDetail> _EmpRequisitionDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pending> Pendings
        {
            get
            {
                if ((_Pendings == null))
                {
                    _Pendings = base.CreateObjectSet<Pending>("Pendings");
                }
                return _Pendings;
            }
        }
        private ObjectSet<Pending> _Pendings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pending_Detail> Pending_Detail
        {
            get
            {
                if ((_Pending_Detail == null))
                {
                    _Pending_Detail = base.CreateObjectSet<Pending_Detail>("Pending_Detail");
                }
                return _Pending_Detail;
            }
        }
        private ObjectSet<Pending_Detail> _Pending_Detail;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseOrder> PurchaseOrders
        {
            get
            {
                if ((_PurchaseOrders == null))
                {
                    _PurchaseOrders = base.CreateObjectSet<PurchaseOrder>("PurchaseOrders");
                }
                return _PurchaseOrders;
            }
        }
        private ObjectSet<PurchaseOrder> _PurchaseOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseOrderDetail> PurchaseOrderDetails
        {
            get
            {
                if ((_PurchaseOrderDetails == null))
                {
                    _PurchaseOrderDetails = base.CreateObjectSet<PurchaseOrderDetail>("PurchaseOrderDetails");
                }
                return _PurchaseOrderDetails;
            }
        }
        private ObjectSet<PurchaseOrderDetail> _PurchaseOrderDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RetrievalDetail> RetrievalDetails
        {
            get
            {
                if ((_RetrievalDetails == null))
                {
                    _RetrievalDetails = base.CreateObjectSet<RetrievalDetail>("RetrievalDetails");
                }
                return _RetrievalDetails;
            }
        }
        private ObjectSet<RetrievalDetail> _RetrievalDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RetrievalMaster> RetrievalMasters
        {
            get
            {
                if ((_RetrievalMasters == null))
                {
                    _RetrievalMasters = base.CreateObjectSet<RetrievalMaster>("RetrievalMasters");
                }
                return _RetrievalMasters;
            }
        }
        private ObjectSet<RetrievalMaster> _RetrievalMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Stock_Item> Stock_Item
        {
            get
            {
                if ((_Stock_Item == null))
                {
                    _Stock_Item = base.CreateObjectSet<Stock_Item>("Stock_Item");
                }
                return _Stock_Item;
            }
        }
        private ObjectSet<Stock_Item> _Stock_Item;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StockHistory> StockHistories
        {
            get
            {
                if ((_StockHistories == null))
                {
                    _StockHistories = base.CreateObjectSet<StockHistory>("StockHistories");
                }
                return _StockHistories;
            }
        }
        private ObjectSet<StockHistory> _StockHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier> Suppliers
        {
            get
            {
                if ((_Suppliers == null))
                {
                    _Suppliers = base.CreateObjectSet<Supplier>("Suppliers");
                }
                return _Suppliers;
            }
        }
        private ObjectSet<Supplier> _Suppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<adjustment_Id_DetailsView> adjustment_Id_DetailsView
        {
            get
            {
                if ((_adjustment_Id_DetailsView == null))
                {
                    _adjustment_Id_DetailsView = base.CreateObjectSet<adjustment_Id_DetailsView>("adjustment_Id_DetailsView");
                }
                return _adjustment_Id_DetailsView;
            }
        }
        private ObjectSet<adjustment_Id_DetailsView> _adjustment_Id_DetailsView;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<adjustment_View> adjustment_View
        {
            get
            {
                if ((_adjustment_View == null))
                {
                    _adjustment_View = base.CreateObjectSet<adjustment_View>("adjustment_View");
                }
                return _adjustment_View;
            }
        }
        private ObjectSet<adjustment_View> _adjustment_View;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<adjustmentId_list_View> adjustmentId_list_View
        {
            get
            {
                if ((_adjustmentId_list_View == null))
                {
                    _adjustmentId_list_View = base.CreateObjectSet<adjustmentId_list_View>("adjustmentId_list_View");
                }
                return _adjustmentId_list_View;
            }
        }
        private ObjectSet<adjustmentId_list_View> _adjustmentId_list_View;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<alloted_total> alloted_total
        {
            get
            {
                if ((_alloted_total == null))
                {
                    _alloted_total = base.CreateObjectSet<alloted_total>("alloted_total");
                }
                return _alloted_total;
            }
        }
        private ObjectSet<alloted_total> _alloted_total;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<calculateAlloted> calculateAlloteds
        {
            get
            {
                if ((_calculateAlloteds == null))
                {
                    _calculateAlloteds = base.CreateObjectSet<calculateAlloted>("calculateAlloteds");
                }
                return _calculateAlloteds;
            }
        }
        private ObjectSet<calculateAlloted> _calculateAlloteds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DepartmentView> DepartmentViews
        {
            get
            {
                if ((_DepartmentViews == null))
                {
                    _DepartmentViews = base.CreateObjectSet<DepartmentView>("DepartmentViews");
                }
                return _DepartmentViews;
            }
        }
        private ObjectSet<DepartmentView> _DepartmentViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Dept_Collection> Dept_Collection
        {
            get
            {
                if ((_Dept_Collection == null))
                {
                    _Dept_Collection = base.CreateObjectSet<Dept_Collection>("Dept_Collection");
                }
                return _Dept_Collection;
            }
        }
        private ObjectSet<Dept_Collection> _Dept_Collection;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemRequested> ItemRequesteds
        {
            get
            {
                if ((_ItemRequesteds == null))
                {
                    _ItemRequesteds = base.CreateObjectSet<ItemRequested>("ItemRequesteds");
                }
                return _ItemRequesteds;
            }
        }
        private ObjectSet<ItemRequested> _ItemRequesteds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseOrderDetailView> PurchaseOrderDetailViews
        {
            get
            {
                if ((_PurchaseOrderDetailViews == null))
                {
                    _PurchaseOrderDetailViews = base.CreateObjectSet<PurchaseOrderDetailView>("PurchaseOrderDetailViews");
                }
                return _PurchaseOrderDetailViews;
            }
        }
        private ObjectSet<PurchaseOrderDetailView> _PurchaseOrderDetailViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReorderStockView> ReorderStockViews
        {
            get
            {
                if ((_ReorderStockViews == null))
                {
                    _ReorderStockViews = base.CreateObjectSet<ReorderStockView>("ReorderStockViews");
                }
                return _ReorderStockViews;
            }
        }
        private ObjectSet<ReorderStockView> _ReorderStockViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SelectEmpRequisition_View> SelectEmpRequisition_View
        {
            get
            {
                if ((_SelectEmpRequisition_View == null))
                {
                    _SelectEmpRequisition_View = base.CreateObjectSet<SelectEmpRequisition_View>("SelectEmpRequisition_View");
                }
                return _SelectEmpRequisition_View;
            }
        }
        private ObjectSet<SelectEmpRequisition_View> _SelectEmpRequisition_View;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SelectRequestDetail_View> SelectRequestDetail_View
        {
            get
            {
                if ((_SelectRequestDetail_View == null))
                {
                    _SelectRequestDetail_View = base.CreateObjectSet<SelectRequestDetail_View>("SelectRequestDetail_View");
                }
                return _SelectRequestDetail_View;
            }
        }
        private ObjectSet<SelectRequestDetail_View> _SelectRequestDetail_View;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_departmentRequests> vw_departmentRequests
        {
            get
            {
                if ((_vw_departmentRequests == null))
                {
                    _vw_departmentRequests = base.CreateObjectSet<vw_departmentRequests>("vw_departmentRequests");
                }
                return _vw_departmentRequests;
            }
        }
        private ObjectSet<vw_departmentRequests> _vw_departmentRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_deptreq> vw_deptreq
        {
            get
            {
                if ((_vw_deptreq == null))
                {
                    _vw_deptreq = base.CreateObjectSet<vw_deptreq>("vw_deptreq");
                }
                return _vw_deptreq;
            }
        }
        private ObjectSet<vw_deptreq> _vw_deptreq;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_disbursement> vw_disbursement
        {
            get
            {
                if ((_vw_disbursement == null))
                {
                    _vw_disbursement = base.CreateObjectSet<vw_disbursement>("vw_disbursement");
                }
                return _vw_disbursement;
            }
        }
        private ObjectSet<vw_disbursement> _vw_disbursement;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_generatepending> vw_generatepending
        {
            get
            {
                if ((_vw_generatepending == null))
                {
                    _vw_generatepending = base.CreateObjectSet<vw_generatepending>("vw_generatepending");
                }
                return _vw_generatepending;
            }
        }
        private ObjectSet<vw_generatepending> _vw_generatepending;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_pending> vw_pending
        {
            get
            {
                if ((_vw_pending == null))
                {
                    _vw_pending = base.CreateObjectSet<vw_pending>("vw_pending");
                }
                return _vw_pending;
            }
        }
        private ObjectSet<vw_pending> _vw_pending;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_pending_retrival> vw_pending_retrival
        {
            get
            {
                if ((_vw_pending_retrival == null))
                {
                    _vw_pending_retrival = base.CreateObjectSet<vw_pending_retrival>("vw_pending_retrival");
                }
                return _vw_pending_retrival;
            }
        }
        private ObjectSet<vw_pending_retrival> _vw_pending_retrival;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_pendingbyDepartment> vw_pendingbyDepartment
        {
            get
            {
                if ((_vw_pendingbyDepartment == null))
                {
                    _vw_pendingbyDepartment = base.CreateObjectSet<vw_pendingbyDepartment>("vw_pendingbyDepartment");
                }
                return _vw_pendingbyDepartment;
            }
        }
        private ObjectSet<vw_pendingbyDepartment> _vw_pendingbyDepartment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_pendingitem> vw_pendingitem
        {
            get
            {
                if ((_vw_pendingitem == null))
                {
                    _vw_pendingitem = base.CreateObjectSet<vw_pendingitem>("vw_pendingitem");
                }
                return _vw_pendingitem;
            }
        }
        private ObjectSet<vw_pendingitem> _vw_pendingitem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_requested> vw_requested
        {
            get
            {
                if ((_vw_requested == null))
                {
                    _vw_requested = base.CreateObjectSet<vw_requested>("vw_requested");
                }
                return _vw_requested;
            }
        }
        private ObjectSet<vw_requested> _vw_requested;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_retrieveitems> vw_retrieveitems
        {
            get
            {
                if ((_vw_retrieveitems == null))
                {
                    _vw_retrieveitems = base.CreateObjectSet<vw_retrieveitems>("vw_retrieveitems");
                }
                return _vw_retrieveitems;
            }
        }
        private ObjectSet<vw_retrieveitems> _vw_retrieveitems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_StockAdjustHistory> vw_StockAdjustHistory
        {
            get
            {
                if ((_vw_StockAdjustHistory == null))
                {
                    _vw_StockAdjustHistory = base.CreateObjectSet<vw_StockAdjustHistory>("vw_StockAdjustHistory");
                }
                return _vw_StockAdjustHistory;
            }
        }
        private ObjectSet<vw_StockAdjustHistory> _vw_StockAdjustHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_collectionpoint> vw_collectionpoint
        {
            get
            {
                if ((_vw_collectionpoint == null))
                {
                    _vw_collectionpoint = base.CreateObjectSet<vw_collectionpoint>("vw_collectionpoint");
                }
                return _vw_collectionpoint;
            }
        }
        private ObjectSet<vw_collectionpoint> _vw_collectionpoint;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Acknowledgements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAcknowledgements(Acknowledgement acknowledgement)
        {
            base.AddObject("Acknowledgements", acknowledgement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Adjustments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdjustments(Adjustment adjustment)
        {
            base.AddObject("Adjustments", adjustment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdjustmentDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdjustmentDetails(AdjustmentDetail adjustmentDetail)
        {
            base.AddObject("AdjustmentDetails", adjustmentDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Authentications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthentications(Authentication authentication)
        {
            base.AddObject("Authentications", authentication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CollectionPoints EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCollectionPoints(CollectionPoint collectionPoint)
        {
            base.AddObject("CollectionPoints", collectionPoint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DepartmentReps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartmentReps(DepartmentRep departmentRep)
        {
            base.AddObject("DepartmentReps", departmentRep);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeptRequisitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeptRequisitions(DeptRequisition deptRequisition)
        {
            base.AddObject("DeptRequisitions", deptRequisition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeptRequisitionDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeptRequisitionDetails(DeptRequisitionDetail deptRequisitionDetail)
        {
            base.AddObject("DeptRequisitionDetails", deptRequisitionDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Disbursements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursements(Disbursement disbursement)
        {
            base.AddObject("Disbursements", disbursement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisbursementDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisbursementDetails(DisbursementDetail disbursementDetail)
        {
            base.AddObject("DisbursementDetails", disbursementDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmpRequisitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmpRequisitions(EmpRequisition empRequisition)
        {
            base.AddObject("EmpRequisitions", empRequisition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmpRequisitionDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmpRequisitionDetails(EmpRequisitionDetail empRequisitionDetail)
        {
            base.AddObject("EmpRequisitionDetails", empRequisitionDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pendings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPendings(Pending pending)
        {
            base.AddObject("Pendings", pending);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pending_Detail EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPending_Detail(Pending_Detail pending_Detail)
        {
            base.AddObject("Pending_Detail", pending_Detail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseOrders(PurchaseOrder purchaseOrder)
        {
            base.AddObject("PurchaseOrders", purchaseOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseOrderDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseOrderDetails(PurchaseOrderDetail purchaseOrderDetail)
        {
            base.AddObject("PurchaseOrderDetails", purchaseOrderDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RetrievalDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRetrievalDetails(RetrievalDetail retrievalDetail)
        {
            base.AddObject("RetrievalDetails", retrievalDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RetrievalMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRetrievalMasters(RetrievalMaster retrievalMaster)
        {
            base.AddObject("RetrievalMasters", retrievalMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stock_Item EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStock_Item(Stock_Item stock_Item)
        {
            base.AddObject("Stock_Item", stock_Item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StockHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStockHistories(StockHistory stockHistory)
        {
            base.AddObject("StockHistories", stockHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Suppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuppliers(Supplier supplier)
        {
            base.AddObject("Suppliers", supplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the adjustment_Id_DetailsView EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToadjustment_Id_DetailsView(adjustment_Id_DetailsView adjustment_Id_DetailsView)
        {
            base.AddObject("adjustment_Id_DetailsView", adjustment_Id_DetailsView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the adjustment_View EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToadjustment_View(adjustment_View adjustment_View)
        {
            base.AddObject("adjustment_View", adjustment_View);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the adjustmentId_list_View EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToadjustmentId_list_View(adjustmentId_list_View adjustmentId_list_View)
        {
            base.AddObject("adjustmentId_list_View", adjustmentId_list_View);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the alloted_total EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToalloted_total(alloted_total alloted_total)
        {
            base.AddObject("alloted_total", alloted_total);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the calculateAlloteds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocalculateAlloteds(calculateAlloted calculateAlloted)
        {
            base.AddObject("calculateAlloteds", calculateAlloted);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DepartmentViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartmentViews(DepartmentView departmentView)
        {
            base.AddObject("DepartmentViews", departmentView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Dept_Collection EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDept_Collection(Dept_Collection dept_Collection)
        {
            base.AddObject("Dept_Collection", dept_Collection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemRequesteds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemRequesteds(ItemRequested itemRequested)
        {
            base.AddObject("ItemRequesteds", itemRequested);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseOrderDetailViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseOrderDetailViews(PurchaseOrderDetailView purchaseOrderDetailView)
        {
            base.AddObject("PurchaseOrderDetailViews", purchaseOrderDetailView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReorderStockViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReorderStockViews(ReorderStockView reorderStockView)
        {
            base.AddObject("ReorderStockViews", reorderStockView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SelectEmpRequisition_View EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSelectEmpRequisition_View(SelectEmpRequisition_View selectEmpRequisition_View)
        {
            base.AddObject("SelectEmpRequisition_View", selectEmpRequisition_View);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SelectRequestDetail_View EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSelectRequestDetail_View(SelectRequestDetail_View selectRequestDetail_View)
        {
            base.AddObject("SelectRequestDetail_View", selectRequestDetail_View);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_departmentRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_departmentRequests(vw_departmentRequests vw_departmentRequests)
        {
            base.AddObject("vw_departmentRequests", vw_departmentRequests);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_deptreq EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_deptreq(vw_deptreq vw_deptreq)
        {
            base.AddObject("vw_deptreq", vw_deptreq);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_disbursement EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_disbursement(vw_disbursement vw_disbursement)
        {
            base.AddObject("vw_disbursement", vw_disbursement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_generatepending EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_generatepending(vw_generatepending vw_generatepending)
        {
            base.AddObject("vw_generatepending", vw_generatepending);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_pending EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_pending(vw_pending vw_pending)
        {
            base.AddObject("vw_pending", vw_pending);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_pending_retrival EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_pending_retrival(vw_pending_retrival vw_pending_retrival)
        {
            base.AddObject("vw_pending_retrival", vw_pending_retrival);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_pendingbyDepartment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_pendingbyDepartment(vw_pendingbyDepartment vw_pendingbyDepartment)
        {
            base.AddObject("vw_pendingbyDepartment", vw_pendingbyDepartment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_pendingitem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_pendingitem(vw_pendingitem vw_pendingitem)
        {
            base.AddObject("vw_pendingitem", vw_pendingitem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_requested EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_requested(vw_requested vw_requested)
        {
            base.AddObject("vw_requested", vw_requested);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_retrieveitems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_retrieveitems(vw_retrieveitems vw_retrieveitems)
        {
            base.AddObject("vw_retrieveitems", vw_retrieveitems);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_StockAdjustHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_StockAdjustHistory(vw_StockAdjustHistory vw_StockAdjustHistory)
        {
            base.AddObject("vw_StockAdjustHistory", vw_StockAdjustHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_collectionpoint EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_collectionpoint(vw_collectionpoint vw_collectionpoint)
        {
            base.AddObject("vw_collectionpoint", vw_collectionpoint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="item_Code">No Metadata Documentation available.</param>
        /// <param name="cMonth">No Metadata Documentation available.</param>
        /// <param name="pMonth">No Metadata Documentation available.</param>
        public ObjectResult<sp_CurrMonthInfo_Result> sp_CurrMonthInfo(global::System.String item_Code, Nullable<global::System.Int32> cMonth, Nullable<global::System.Int32> pMonth)
        {
            ObjectParameter item_CodeParameter;
            if (item_Code != null)
            {
                item_CodeParameter = new ObjectParameter("Item_Code", item_Code);
            }
            else
            {
                item_CodeParameter = new ObjectParameter("Item_Code", typeof(global::System.String));
            }
    
            ObjectParameter cMonthParameter;
            if (cMonth.HasValue)
            {
                cMonthParameter = new ObjectParameter("cMonth", cMonth);
            }
            else
            {
                cMonthParameter = new ObjectParameter("cMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter pMonthParameter;
            if (pMonth.HasValue)
            {
                pMonthParameter = new ObjectParameter("pMonth", pMonth);
            }
            else
            {
                pMonthParameter = new ObjectParameter("pMonth", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_CurrMonthInfo_Result>("sp_CurrMonthInfo", item_CodeParameter, cMonthParameter, pMonthParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fMonth">No Metadata Documentation available.</param>
        /// <param name="month">No Metadata Documentation available.</param>
        public ObjectResult<sp_CurrMonthPurchase_Result> sp_CurrMonthPurchase(Nullable<global::System.Int32> fMonth, Nullable<global::System.Int32> month)
        {
            ObjectParameter fMonthParameter;
            if (fMonth.HasValue)
            {
                fMonthParameter = new ObjectParameter("fMonth", fMonth);
            }
            else
            {
                fMonthParameter = new ObjectParameter("fMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter monthParameter;
            if (month.HasValue)
            {
                monthParameter = new ObjectParameter("month", month);
            }
            else
            {
                monthParameter = new ObjectParameter("month", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_CurrMonthPurchase_Result>("sp_CurrMonthPurchase", fMonthParameter, monthParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="item_Code">No Metadata Documentation available.</param>
        /// <param name="cMonth">No Metadata Documentation available.</param>
        /// <param name="fMonth">No Metadata Documentation available.</param>
        /// <param name="sMonth">No Metadata Documentation available.</param>
        /// <param name="fmYear">No Metadata Documentation available.</param>
        /// <param name="smYear">No Metadata Documentation available.</param>
        public ObjectResult<sp_DeptItemListByThreeMonth_Result> sp_DeptItemListByThreeMonth(global::System.String item_Code, Nullable<global::System.Int32> cMonth, Nullable<global::System.Int32> fMonth, Nullable<global::System.Int32> sMonth, Nullable<global::System.Int32> fmYear, Nullable<global::System.Int32> smYear)
        {
            ObjectParameter item_CodeParameter;
            if (item_Code != null)
            {
                item_CodeParameter = new ObjectParameter("Item_Code", item_Code);
            }
            else
            {
                item_CodeParameter = new ObjectParameter("Item_Code", typeof(global::System.String));
            }
    
            ObjectParameter cMonthParameter;
            if (cMonth.HasValue)
            {
                cMonthParameter = new ObjectParameter("cMonth", cMonth);
            }
            else
            {
                cMonthParameter = new ObjectParameter("cMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter fMonthParameter;
            if (fMonth.HasValue)
            {
                fMonthParameter = new ObjectParameter("fMonth", fMonth);
            }
            else
            {
                fMonthParameter = new ObjectParameter("fMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter sMonthParameter;
            if (sMonth.HasValue)
            {
                sMonthParameter = new ObjectParameter("sMonth", sMonth);
            }
            else
            {
                sMonthParameter = new ObjectParameter("sMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter fmYearParameter;
            if (fmYear.HasValue)
            {
                fmYearParameter = new ObjectParameter("fmYear", fmYear);
            }
            else
            {
                fmYearParameter = new ObjectParameter("fmYear", typeof(global::System.Int32));
            }
    
            ObjectParameter smYearParameter;
            if (smYear.HasValue)
            {
                smYearParameter = new ObjectParameter("smYear", smYear);
            }
            else
            {
                smYearParameter = new ObjectParameter("smYear", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_DeptItemListByThreeMonth_Result>("sp_DeptItemListByThreeMonth", item_CodeParameter, cMonthParameter, fMonthParameter, sMonthParameter, fmYearParameter, smYearParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="deptCode">No Metadata Documentation available.</param>
        /// <param name="pMonth">No Metadata Documentation available.</param>
        /// <param name="cMonth">No Metadata Documentation available.</param>
        public ObjectResult<sp_DeptReqReport_Result> sp_DeptReqReport(global::System.String deptCode, Nullable<global::System.Int32> pMonth, Nullable<global::System.Int32> cMonth)
        {
            ObjectParameter deptCodeParameter;
            if (deptCode != null)
            {
                deptCodeParameter = new ObjectParameter("deptCode", deptCode);
            }
            else
            {
                deptCodeParameter = new ObjectParameter("deptCode", typeof(global::System.String));
            }
    
            ObjectParameter pMonthParameter;
            if (pMonth.HasValue)
            {
                pMonthParameter = new ObjectParameter("pMonth", pMonth);
            }
            else
            {
                pMonthParameter = new ObjectParameter("pMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter cMonthParameter;
            if (cMonth.HasValue)
            {
                cMonthParameter = new ObjectParameter("cMonth", cMonth);
            }
            else
            {
                cMonthParameter = new ObjectParameter("cMonth", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_DeptReqReport_Result>("sp_DeptReqReport", deptCodeParameter, pMonthParameter, cMonthParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="deptCode">No Metadata Documentation available.</param>
        /// <param name="pMonth">No Metadata Documentation available.</param>
        /// <param name="cMonth">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        public ObjectResult<sp_DeptReqReportByStatus_Result> sp_DeptReqReportByStatus(global::System.String deptCode, Nullable<global::System.Int32> pMonth, Nullable<global::System.Int32> cMonth, global::System.String status)
        {
            ObjectParameter deptCodeParameter;
            if (deptCode != null)
            {
                deptCodeParameter = new ObjectParameter("deptCode", deptCode);
            }
            else
            {
                deptCodeParameter = new ObjectParameter("deptCode", typeof(global::System.String));
            }
    
            ObjectParameter pMonthParameter;
            if (pMonth.HasValue)
            {
                pMonthParameter = new ObjectParameter("pMonth", pMonth);
            }
            else
            {
                pMonthParameter = new ObjectParameter("pMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter cMonthParameter;
            if (cMonth.HasValue)
            {
                cMonthParameter = new ObjectParameter("cMonth", cMonth);
            }
            else
            {
                cMonthParameter = new ObjectParameter("cMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("status", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<sp_DeptReqReportByStatus_Result>("sp_DeptReqReportByStatus", deptCodeParameter, pMonthParameter, cMonthParameter, statusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="deptCode">No Metadata Documentation available.</param>
        /// <param name="fMonth">No Metadata Documentation available.</param>
        /// <param name="sMonth">No Metadata Documentation available.</param>
        /// <param name="cMonth">No Metadata Documentation available.</param>
        /// <param name="fmYear">No Metadata Documentation available.</param>
        /// <param name="smYear">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        public ObjectResult<sp_DeptReqReportByStatusThree_Result> sp_DeptReqReportByStatusThree(global::System.String deptCode, Nullable<global::System.Int32> fMonth, Nullable<global::System.Int32> sMonth, Nullable<global::System.Int32> cMonth, Nullable<global::System.Int32> fmYear, Nullable<global::System.Int32> smYear, global::System.String status)
        {
            ObjectParameter deptCodeParameter;
            if (deptCode != null)
            {
                deptCodeParameter = new ObjectParameter("deptCode", deptCode);
            }
            else
            {
                deptCodeParameter = new ObjectParameter("deptCode", typeof(global::System.String));
            }
    
            ObjectParameter fMonthParameter;
            if (fMonth.HasValue)
            {
                fMonthParameter = new ObjectParameter("fMonth", fMonth);
            }
            else
            {
                fMonthParameter = new ObjectParameter("fMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter sMonthParameter;
            if (sMonth.HasValue)
            {
                sMonthParameter = new ObjectParameter("sMonth", sMonth);
            }
            else
            {
                sMonthParameter = new ObjectParameter("sMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter cMonthParameter;
            if (cMonth.HasValue)
            {
                cMonthParameter = new ObjectParameter("cMonth", cMonth);
            }
            else
            {
                cMonthParameter = new ObjectParameter("cMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter fmYearParameter;
            if (fmYear.HasValue)
            {
                fmYearParameter = new ObjectParameter("fmYear", fmYear);
            }
            else
            {
                fmYearParameter = new ObjectParameter("fmYear", typeof(global::System.Int32));
            }
    
            ObjectParameter smYearParameter;
            if (smYear.HasValue)
            {
                smYearParameter = new ObjectParameter("smYear", smYear);
            }
            else
            {
                smYearParameter = new ObjectParameter("smYear", typeof(global::System.Int32));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("status", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<sp_DeptReqReportByStatusThree_Result>("sp_DeptReqReportByStatusThree", deptCodeParameter, fMonthParameter, sMonthParameter, cMonthParameter, fmYearParameter, smYearParameter, statusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="deptCode">No Metadata Documentation available.</param>
        /// <param name="fMonth">No Metadata Documentation available.</param>
        /// <param name="sMonth">No Metadata Documentation available.</param>
        /// <param name="cMonth">No Metadata Documentation available.</param>
        /// <param name="fmYear">No Metadata Documentation available.</param>
        /// <param name="smYear">No Metadata Documentation available.</param>
        public ObjectResult<sp_DeptReqReportByThree_Result> sp_DeptReqReportByThree(global::System.String deptCode, Nullable<global::System.Int32> fMonth, Nullable<global::System.Int32> sMonth, Nullable<global::System.Int32> cMonth, Nullable<global::System.Int32> fmYear, Nullable<global::System.Int32> smYear)
        {
            ObjectParameter deptCodeParameter;
            if (deptCode != null)
            {
                deptCodeParameter = new ObjectParameter("deptCode", deptCode);
            }
            else
            {
                deptCodeParameter = new ObjectParameter("deptCode", typeof(global::System.String));
            }
    
            ObjectParameter fMonthParameter;
            if (fMonth.HasValue)
            {
                fMonthParameter = new ObjectParameter("fMonth", fMonth);
            }
            else
            {
                fMonthParameter = new ObjectParameter("fMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter sMonthParameter;
            if (sMonth.HasValue)
            {
                sMonthParameter = new ObjectParameter("sMonth", sMonth);
            }
            else
            {
                sMonthParameter = new ObjectParameter("sMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter cMonthParameter;
            if (cMonth.HasValue)
            {
                cMonthParameter = new ObjectParameter("cMonth", cMonth);
            }
            else
            {
                cMonthParameter = new ObjectParameter("cMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter fmYearParameter;
            if (fmYear.HasValue)
            {
                fmYearParameter = new ObjectParameter("fmYear", fmYear);
            }
            else
            {
                fmYearParameter = new ObjectParameter("fmYear", typeof(global::System.Int32));
            }
    
            ObjectParameter smYearParameter;
            if (smYear.HasValue)
            {
                smYearParameter = new ObjectParameter("smYear", smYear);
            }
            else
            {
                smYearParameter = new ObjectParameter("smYear", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_DeptReqReportByThree_Result>("sp_DeptReqReportByThree", deptCodeParameter, fMonthParameter, sMonthParameter, cMonthParameter, fmYearParameter, smYearParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cMonth">No Metadata Documentation available.</param>
        /// <param name="fMonth">No Metadata Documentation available.</param>
        /// <param name="sMonth">No Metadata Documentation available.</param>
        /// <param name="fmYear">No Metadata Documentation available.</param>
        /// <param name="smYear">No Metadata Documentation available.</param>
        public ObjectResult<sp_PurchaseCatByThree_Result> sp_PurchaseCatByThree(Nullable<global::System.Int32> cMonth, Nullable<global::System.Int32> fMonth, Nullable<global::System.Int32> sMonth, Nullable<global::System.Int32> fmYear, Nullable<global::System.Int32> smYear)
        {
            ObjectParameter cMonthParameter;
            if (cMonth.HasValue)
            {
                cMonthParameter = new ObjectParameter("cMonth", cMonth);
            }
            else
            {
                cMonthParameter = new ObjectParameter("cMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter fMonthParameter;
            if (fMonth.HasValue)
            {
                fMonthParameter = new ObjectParameter("fMonth", fMonth);
            }
            else
            {
                fMonthParameter = new ObjectParameter("fMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter sMonthParameter;
            if (sMonth.HasValue)
            {
                sMonthParameter = new ObjectParameter("sMonth", sMonth);
            }
            else
            {
                sMonthParameter = new ObjectParameter("sMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter fmYearParameter;
            if (fmYear.HasValue)
            {
                fmYearParameter = new ObjectParameter("fmYear", fmYear);
            }
            else
            {
                fmYearParameter = new ObjectParameter("fmYear", typeof(global::System.Int32));
            }
    
            ObjectParameter smYearParameter;
            if (smYear.HasValue)
            {
                smYearParameter = new ObjectParameter("smYear", smYear);
            }
            else
            {
                smYearParameter = new ObjectParameter("smYear", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_PurchaseCatByThree_Result>("sp_PurchaseCatByThree", cMonthParameter, fMonthParameter, sMonthParameter, fmYearParameter, smYearParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemCode">No Metadata Documentation available.</param>
        /// <param name="month">No Metadata Documentation available.</param>
        public ObjectResult<sp_StockAdjustmentHistory_Result> sp_StockAdjustmentHistory(global::System.String itemCode, Nullable<global::System.Int32> month)
        {
            ObjectParameter itemCodeParameter;
            if (itemCode != null)
            {
                itemCodeParameter = new ObjectParameter("itemCode", itemCode);
            }
            else
            {
                itemCodeParameter = new ObjectParameter("itemCode", typeof(global::System.String));
            }
    
            ObjectParameter monthParameter;
            if (month.HasValue)
            {
                monthParameter = new ObjectParameter("month", month);
            }
            else
            {
                monthParameter = new ObjectParameter("month", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_StockAdjustmentHistory_Result>("sp_StockAdjustmentHistory", itemCodeParameter, monthParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="Acknowledgement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Acknowledgement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Acknowledgement object.
        /// </summary>
        /// <param name="adjustmentID">Initial value of the AdjustmentID property.</param>
        /// <param name="adjustment_Date">Initial value of the Adjustment_Date property.</param>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="reason">Initial value of the Reason property.</param>
        public static Acknowledgement CreateAcknowledgement(global::System.Int32 adjustmentID, global::System.DateTime adjustment_Date, global::System.String item_Code, global::System.Int32 quantity, global::System.String reason)
        {
            Acknowledgement acknowledgement = new Acknowledgement();
            acknowledgement.AdjustmentID = adjustmentID;
            acknowledgement.Adjustment_Date = adjustment_Date;
            acknowledgement.Item_Code = item_Code;
            acknowledgement.Quantity = quantity;
            acknowledgement.Reason = reason;
            return acknowledgement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdjustmentID
        {
            get
            {
                return _AdjustmentID;
            }
            set
            {
                if (_AdjustmentID != value)
                {
                    OnAdjustmentIDChanging(value);
                    ReportPropertyChanging("AdjustmentID");
                    _AdjustmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdjustmentID");
                    OnAdjustmentIDChanged();
                }
            }
        }
        private global::System.Int32 _AdjustmentID;
        partial void OnAdjustmentIDChanging(global::System.Int32 value);
        partial void OnAdjustmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Adjustment_Date
        {
            get
            {
                return _Adjustment_Date;
            }
            set
            {
                OnAdjustment_DateChanging(value);
                ReportPropertyChanging("Adjustment_Date");
                _Adjustment_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Adjustment_Date");
                OnAdjustment_DateChanged();
            }
        }
        private global::System.DateTime _Adjustment_Date;
        partial void OnAdjustment_DateChanging(global::System.DateTime value);
        partial void OnAdjustment_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                OnItem_CodeChanging(value);
                ReportPropertyChanging("Item_Code");
                _Item_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Item_Code");
                OnItem_CodeChanged();
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DepartmentCode
        {
            get
            {
                return _DepartmentCode;
            }
            set
            {
                OnDepartmentCodeChanging(value);
                ReportPropertyChanging("DepartmentCode");
                _DepartmentCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DepartmentCode");
                OnDepartmentCodeChanged();
            }
        }
        private global::System.String _DepartmentCode;
        partial void OnDepartmentCodeChanging(global::System.String value);
        partial void OnDepartmentCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Acknowledgement_Stock_Item", "Stock_Item")]
        public Stock_Item Stock_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_Acknowledgement_Stock_Item", "Stock_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_Acknowledgement_Stock_Item", "Stock_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Stock_Item> Stock_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_Acknowledgement_Stock_Item", "Stock_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Stock_Item>("Team4_ADModel.FK_Acknowledgement_Stock_Item", "Stock_Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="Adjustment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Adjustment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Adjustment object.
        /// </summary>
        /// <param name="adjustmentID">Initial value of the AdjustmentID property.</param>
        public static Adjustment CreateAdjustment(global::System.Int32 adjustmentID)
        {
            Adjustment adjustment = new Adjustment();
            adjustment.AdjustmentID = adjustmentID;
            return adjustment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdjustmentID
        {
            get
            {
                return _AdjustmentID;
            }
            set
            {
                if (_AdjustmentID != value)
                {
                    OnAdjustmentIDChanging(value);
                    ReportPropertyChanging("AdjustmentID");
                    _AdjustmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdjustmentID");
                    OnAdjustmentIDChanged();
                }
            }
        }
        private global::System.Int32 _AdjustmentID;
        partial void OnAdjustmentIDChanging(global::System.Int32 value);
        partial void OnAdjustmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdjustBy
        {
            get
            {
                return _AdjustBy;
            }
            set
            {
                OnAdjustByChanging(value);
                ReportPropertyChanging("AdjustBy");
                _AdjustBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdjustBy");
                OnAdjustByChanged();
            }
        }
        private Nullable<global::System.Int32> _AdjustBy;
        partial void OnAdjustByChanging(Nullable<global::System.Int32> value);
        partial void OnAdjustByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Adjustment_Date
        {
            get
            {
                return _Adjustment_Date;
            }
            set
            {
                OnAdjustment_DateChanging(value);
                ReportPropertyChanging("Adjustment_Date");
                _Adjustment_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Adjustment_Date");
                OnAdjustment_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Adjustment_Date;
        partial void OnAdjustment_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnAdjustment_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApprovedBy
        {
            get
            {
                return _ApprovedBy;
            }
            set
            {
                OnApprovedByChanging(value);
                ReportPropertyChanging("ApprovedBy");
                _ApprovedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedBy");
                OnApprovedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ApprovedBy;
        partial void OnApprovedByChanging(Nullable<global::System.Int32> value);
        partial void OnApprovedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Approve_Date
        {
            get
            {
                return _Approve_Date;
            }
            set
            {
                OnApprove_DateChanging(value);
                ReportPropertyChanging("Approve_Date");
                _Approve_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Approve_Date");
                OnApprove_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Approve_Date;
        partial void OnApprove_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnApprove_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Approve_Status
        {
            get
            {
                return _Approve_Status;
            }
            set
            {
                OnApprove_StatusChanging(value);
                ReportPropertyChanging("Approve_Status");
                _Approve_Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Approve_Status");
                OnApprove_StatusChanged();
            }
        }
        private global::System.String _Approve_Status;
        partial void OnApprove_StatusChanging(global::System.String value);
        partial void OnApprove_StatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Authorized_By
        {
            get
            {
                return _Authorized_By;
            }
            set
            {
                OnAuthorized_ByChanging(value);
                ReportPropertyChanging("Authorized_By");
                _Authorized_By = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Authorized_By");
                OnAuthorized_ByChanged();
            }
        }
        private global::System.String _Authorized_By;
        partial void OnAuthorized_ByChanging(global::System.String value);
        partial void OnAuthorized_ByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_AdjustmentDetail_Adjustment", "AdjustmentDetail")]
        public EntityCollection<AdjustmentDetail> AdjustmentDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdjustmentDetail>("Team4_ADModel.FK_AdjustmentDetail_Adjustment", "AdjustmentDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdjustmentDetail>("Team4_ADModel.FK_AdjustmentDetail_Adjustment", "AdjustmentDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="adjustment_Id_DetailsView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class adjustment_Id_DetailsView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new adjustment_Id_DetailsView object.
        /// </summary>
        /// <param name="adjustmentID">Initial value of the AdjustmentID property.</param>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="reason">Initial value of the Reason property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static adjustment_Id_DetailsView Createadjustment_Id_DetailsView(global::System.Int32 adjustmentID, global::System.String item_Code, global::System.Int32 quantity, global::System.String reason, global::System.String status)
        {
            adjustment_Id_DetailsView adjustment_Id_DetailsView = new adjustment_Id_DetailsView();
            adjustment_Id_DetailsView.AdjustmentID = adjustmentID;
            adjustment_Id_DetailsView.Item_Code = item_Code;
            adjustment_Id_DetailsView.Quantity = quantity;
            adjustment_Id_DetailsView.Reason = reason;
            adjustment_Id_DetailsView.Status = status;
            return adjustment_Id_DetailsView;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdjustmentID
        {
            get
            {
                return _AdjustmentID;
            }
            set
            {
                if (_AdjustmentID != value)
                {
                    OnAdjustmentIDChanging(value);
                    ReportPropertyChanging("AdjustmentID");
                    _AdjustmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdjustmentID");
                    OnAdjustmentIDChanged();
                }
            }
        }
        private global::System.Int32 _AdjustmentID;
        partial void OnAdjustmentIDChanging(global::System.Int32 value);
        partial void OnAdjustmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                if (_Item_Code != value)
                {
                    OnItem_CodeChanging(value);
                    ReportPropertyChanging("Item_Code");
                    _Item_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Item_Code");
                    OnItem_CodeChanged();
                }
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    OnQuantityChanging(value);
                    ReportPropertyChanging("Quantity");
                    _Quantity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Quantity");
                    OnQuantityChanged();
                }
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                if (_Reason != value)
                {
                    OnReasonChanging(value);
                    ReportPropertyChanging("Reason");
                    _Reason = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Reason");
                    OnReasonChanged();
                }
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="adjustment_View")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class adjustment_View : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new adjustment_View object.
        /// </summary>
        /// <param name="adjustmentID">Initial value of the AdjustmentID property.</param>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="reason">Initial value of the Reason property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static adjustment_View Createadjustment_View(global::System.Int32 adjustmentID, global::System.String item_Code, global::System.Int32 quantity, global::System.String reason, global::System.String status)
        {
            adjustment_View adjustment_View = new adjustment_View();
            adjustment_View.AdjustmentID = adjustmentID;
            adjustment_View.Item_Code = item_Code;
            adjustment_View.Quantity = quantity;
            adjustment_View.Reason = reason;
            adjustment_View.Status = status;
            return adjustment_View;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdjustBy
        {
            get
            {
                return _AdjustBy;
            }
            set
            {
                OnAdjustByChanging(value);
                ReportPropertyChanging("AdjustBy");
                _AdjustBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdjustBy");
                OnAdjustByChanged();
            }
        }
        private Nullable<global::System.Int32> _AdjustBy;
        partial void OnAdjustByChanging(Nullable<global::System.Int32> value);
        partial void OnAdjustByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Adjustment_Date
        {
            get
            {
                return _Adjustment_Date;
            }
            set
            {
                OnAdjustment_DateChanging(value);
                ReportPropertyChanging("Adjustment_Date");
                _Adjustment_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Adjustment_Date");
                OnAdjustment_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Adjustment_Date;
        partial void OnAdjustment_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnAdjustment_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApprovedBy
        {
            get
            {
                return _ApprovedBy;
            }
            set
            {
                OnApprovedByChanging(value);
                ReportPropertyChanging("ApprovedBy");
                _ApprovedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedBy");
                OnApprovedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ApprovedBy;
        partial void OnApprovedByChanging(Nullable<global::System.Int32> value);
        partial void OnApprovedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Approve_Date
        {
            get
            {
                return _Approve_Date;
            }
            set
            {
                OnApprove_DateChanging(value);
                ReportPropertyChanging("Approve_Date");
                _Approve_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Approve_Date");
                OnApprove_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Approve_Date;
        partial void OnApprove_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnApprove_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Approve_Status
        {
            get
            {
                return _Approve_Status;
            }
            set
            {
                OnApprove_StatusChanging(value);
                ReportPropertyChanging("Approve_Status");
                _Approve_Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Approve_Status");
                OnApprove_StatusChanged();
            }
        }
        private global::System.String _Approve_Status;
        partial void OnApprove_StatusChanging(global::System.String value);
        partial void OnApprove_StatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Authorized_By
        {
            get
            {
                return _Authorized_By;
            }
            set
            {
                OnAuthorized_ByChanging(value);
                ReportPropertyChanging("Authorized_By");
                _Authorized_By = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Authorized_By");
                OnAuthorized_ByChanged();
            }
        }
        private global::System.String _Authorized_By;
        partial void OnAuthorized_ByChanging(global::System.String value);
        partial void OnAuthorized_ByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdjustmentID
        {
            get
            {
                return _AdjustmentID;
            }
            set
            {
                if (_AdjustmentID != value)
                {
                    OnAdjustmentIDChanging(value);
                    ReportPropertyChanging("AdjustmentID");
                    _AdjustmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdjustmentID");
                    OnAdjustmentIDChanged();
                }
            }
        }
        private global::System.Int32 _AdjustmentID;
        partial void OnAdjustmentIDChanging(global::System.Int32 value);
        partial void OnAdjustmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                if (_Item_Code != value)
                {
                    OnItem_CodeChanging(value);
                    ReportPropertyChanging("Item_Code");
                    _Item_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Item_Code");
                    OnItem_CodeChanged();
                }
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    OnQuantityChanging(value);
                    ReportPropertyChanging("Quantity");
                    _Quantity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Quantity");
                    OnQuantityChanged();
                }
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                if (_Reason != value)
                {
                    OnReasonChanging(value);
                    ReportPropertyChanging("Reason");
                    _Reason = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Reason");
                    OnReasonChanged();
                }
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="AdjustmentDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdjustmentDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdjustmentDetail object.
        /// </summary>
        /// <param name="adjustment_DetailID">Initial value of the Adjustment_DetailID property.</param>
        /// <param name="adjustmentID">Initial value of the AdjustmentID property.</param>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="reason">Initial value of the Reason property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static AdjustmentDetail CreateAdjustmentDetail(global::System.Int32 adjustment_DetailID, global::System.Int32 adjustmentID, global::System.String item_Code, global::System.Int32 quantity, global::System.String reason, global::System.String status)
        {
            AdjustmentDetail adjustmentDetail = new AdjustmentDetail();
            adjustmentDetail.Adjustment_DetailID = adjustment_DetailID;
            adjustmentDetail.AdjustmentID = adjustmentID;
            adjustmentDetail.Item_Code = item_Code;
            adjustmentDetail.Quantity = quantity;
            adjustmentDetail.Reason = reason;
            adjustmentDetail.Status = status;
            return adjustmentDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Adjustment_DetailID
        {
            get
            {
                return _Adjustment_DetailID;
            }
            set
            {
                if (_Adjustment_DetailID != value)
                {
                    OnAdjustment_DetailIDChanging(value);
                    ReportPropertyChanging("Adjustment_DetailID");
                    _Adjustment_DetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Adjustment_DetailID");
                    OnAdjustment_DetailIDChanged();
                }
            }
        }
        private global::System.Int32 _Adjustment_DetailID;
        partial void OnAdjustment_DetailIDChanging(global::System.Int32 value);
        partial void OnAdjustment_DetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdjustmentID
        {
            get
            {
                return _AdjustmentID;
            }
            set
            {
                OnAdjustmentIDChanging(value);
                ReportPropertyChanging("AdjustmentID");
                _AdjustmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdjustmentID");
                OnAdjustmentIDChanged();
            }
        }
        private global::System.Int32 _AdjustmentID;
        partial void OnAdjustmentIDChanging(global::System.Int32 value);
        partial void OnAdjustmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                OnItem_CodeChanging(value);
                ReportPropertyChanging("Item_Code");
                _Item_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Item_Code");
                OnItem_CodeChanged();
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_AdjustmentDetail_Adjustment", "Adjustment")]
        public Adjustment Adjustment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Adjustment>("Team4_ADModel.FK_AdjustmentDetail_Adjustment", "Adjustment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Adjustment>("Team4_ADModel.FK_AdjustmentDetail_Adjustment", "Adjustment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Adjustment> AdjustmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Adjustment>("Team4_ADModel.FK_AdjustmentDetail_Adjustment", "Adjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Adjustment>("Team4_ADModel.FK_AdjustmentDetail_Adjustment", "Adjustment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_AdjustmentDetail_Stock_Item", "Stock_Item")]
        public Stock_Item Stock_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_AdjustmentDetail_Stock_Item", "Stock_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_AdjustmentDetail_Stock_Item", "Stock_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Stock_Item> Stock_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_AdjustmentDetail_Stock_Item", "Stock_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Stock_Item>("Team4_ADModel.FK_AdjustmentDetail_Stock_Item", "Stock_Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="adjustmentId_list_View")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class adjustmentId_list_View : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new adjustmentId_list_View object.
        /// </summary>
        /// <param name="adjustmentID">Initial value of the AdjustmentID property.</param>
        public static adjustmentId_list_View CreateadjustmentId_list_View(global::System.Int32 adjustmentID)
        {
            adjustmentId_list_View adjustmentId_list_View = new adjustmentId_list_View();
            adjustmentId_list_View.AdjustmentID = adjustmentID;
            return adjustmentId_list_View;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdjustmentID
        {
            get
            {
                return _AdjustmentID;
            }
            set
            {
                if (_AdjustmentID != value)
                {
                    OnAdjustmentIDChanging(value);
                    ReportPropertyChanging("AdjustmentID");
                    _AdjustmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdjustmentID");
                    OnAdjustmentIDChanged();
                }
            }
        }
        private global::System.Int32 _AdjustmentID;
        partial void OnAdjustmentIDChanging(global::System.Int32 value);
        partial void OnAdjustmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Authorized_By
        {
            get
            {
                return _Authorized_By;
            }
            set
            {
                OnAuthorized_ByChanging(value);
                ReportPropertyChanging("Authorized_By");
                _Authorized_By = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Authorized_By");
                OnAuthorized_ByChanged();
            }
        }
        private global::System.String _Authorized_By;
        partial void OnAuthorized_ByChanging(global::System.String value);
        partial void OnAuthorized_ByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Approve_Status
        {
            get
            {
                return _Approve_Status;
            }
            set
            {
                OnApprove_StatusChanging(value);
                ReportPropertyChanging("Approve_Status");
                _Approve_Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Approve_Status");
                OnApprove_StatusChanged();
            }
        }
        private global::System.String _Approve_Status;
        partial void OnApprove_StatusChanging(global::System.String value);
        partial void OnApprove_StatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="alloted_total")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class alloted_total : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new alloted_total object.
        /// </summary>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        public static alloted_total Createalloted_total(global::System.String item_Code)
        {
            alloted_total alloted_total = new alloted_total();
            alloted_total.Item_Code = item_Code;
            return alloted_total;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                if (_Item_Code != value)
                {
                    OnItem_CodeChanging(value);
                    ReportPropertyChanging("Item_Code");
                    _Item_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Item_Code");
                    OnItem_CodeChanged();
                }
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Total_Alloted
        {
            get
            {
                return _Total_Alloted;
            }
            set
            {
                OnTotal_AllotedChanging(value);
                ReportPropertyChanging("Total_Alloted");
                _Total_Alloted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_Alloted");
                OnTotal_AllotedChanged();
            }
        }
        private Nullable<global::System.Int32> _Total_Alloted;
        partial void OnTotal_AllotedChanging(Nullable<global::System.Int32> value);
        partial void OnTotal_AllotedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="Authentication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Authentication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Authentication object.
        /// </summary>
        /// <param name="authenticationID">Initial value of the AuthenticationID property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static Authentication CreateAuthentication(global::System.Int32 authenticationID, global::System.Int32 employeeID, global::System.String password)
        {
            Authentication authentication = new Authentication();
            authentication.AuthenticationID = authenticationID;
            authentication.EmployeeID = employeeID;
            authentication.Password = password;
            return authentication;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthenticationID
        {
            get
            {
                return _AuthenticationID;
            }
            set
            {
                if (_AuthenticationID != value)
                {
                    OnAuthenticationIDChanging(value);
                    ReportPropertyChanging("AuthenticationID");
                    _AuthenticationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AuthenticationID");
                    OnAuthenticationIDChanged();
                }
            }
        }
        private global::System.Int32 _AuthenticationID;
        partial void OnAuthenticationIDChanging(global::System.Int32 value);
        partial void OnAuthenticationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="calculateAlloted")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class calculateAlloted : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new calculateAlloted object.
        /// </summary>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        public static calculateAlloted CreatecalculateAlloted(global::System.String item_Code)
        {
            calculateAlloted calculateAlloted = new calculateAlloted();
            calculateAlloted.Item_Code = item_Code;
            return calculateAlloted;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                if (_Item_Code != value)
                {
                    OnItem_CodeChanging(value);
                    ReportPropertyChanging("Item_Code");
                    _Item_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Item_Code");
                    OnItem_CodeChanged();
                }
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Total_Alloted
        {
            get
            {
                return _Total_Alloted;
            }
            set
            {
                OnTotal_AllotedChanging(value);
                ReportPropertyChanging("Total_Alloted");
                _Total_Alloted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_Alloted");
                OnTotal_AllotedChanged();
            }
        }
        private Nullable<global::System.Int32> _Total_Alloted;
        partial void OnTotal_AllotedChanging(Nullable<global::System.Int32> value);
        partial void OnTotal_AllotedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="category_Name">Initial value of the Category_Name property.</param>
        public static Category CreateCategory(global::System.Int32 categoryID, global::System.String category_Name)
        {
            Category category = new Category();
            category.CategoryID = categoryID;
            category.Category_Name = category_Name;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category_Name
        {
            get
            {
                return _Category_Name;
            }
            set
            {
                OnCategory_NameChanging(value);
                ReportPropertyChanging("Category_Name");
                _Category_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category_Name");
                OnCategory_NameChanged();
            }
        }
        private global::System.String _Category_Name;
        partial void OnCategory_NameChanging(global::System.String value);
        partial void OnCategory_NameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Stock_Item_Category", "Stock_Item")]
        public EntityCollection<Stock_Item> Stock_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Stock_Item>("Team4_ADModel.FK_Stock_Item_Category", "Stock_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Stock_Item>("Team4_ADModel.FK_Stock_Item_Category", "Stock_Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Stock_Item_Category1", "Stock_Item")]
        public EntityCollection<Stock_Item> Stock_Item1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Stock_Item>("Team4_ADModel.FK_Stock_Item_Category1", "Stock_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Stock_Item>("Team4_ADModel.FK_Stock_Item_Category1", "Stock_Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="CollectionPoint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CollectionPoint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CollectionPoint object.
        /// </summary>
        /// <param name="collectionID">Initial value of the CollectionID property.</param>
        /// <param name="place">Initial value of the Place property.</param>
        public static CollectionPoint CreateCollectionPoint(global::System.Int32 collectionID, global::System.String place)
        {
            CollectionPoint collectionPoint = new CollectionPoint();
            collectionPoint.CollectionID = collectionID;
            collectionPoint.Place = place;
            return collectionPoint;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CollectionID
        {
            get
            {
                return _CollectionID;
            }
            set
            {
                if (_CollectionID != value)
                {
                    OnCollectionIDChanging(value);
                    ReportPropertyChanging("CollectionID");
                    _CollectionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CollectionID");
                    OnCollectionIDChanged();
                }
            }
        }
        private global::System.Int32 _CollectionID;
        partial void OnCollectionIDChanging(global::System.Int32 value);
        partial void OnCollectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Place
        {
            get
            {
                return _Place;
            }
            set
            {
                OnPlaceChanging(value);
                ReportPropertyChanging("Place");
                _Place = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Place");
                OnPlaceChanged();
            }
        }
        private global::System.String _Place;
        partial void OnPlaceChanging(global::System.String value);
        partial void OnPlaceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Department_CollectionPoint", "Department")]
        public EntityCollection<Department> Departments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("Team4_ADModel.FK_Department_CollectionPoint", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("Team4_ADModel.FK_Department_CollectionPoint", "Department", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="department_Code">Initial value of the Department_Code property.</param>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        /// <param name="contact_Person">Initial value of the Contact_Person property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="collectionID">Initial value of the CollectionID property.</param>
        /// <param name="department_Head">Initial value of the Department_Head property.</param>
        public static Department CreateDepartment(global::System.String department_Code, global::System.String department_Name, global::System.Int32 contact_Person, global::System.Int32 phone, global::System.Int32 collectionID, global::System.Int32 department_Head)
        {
            Department department = new Department();
            department.Department_Code = department_Code;
            department.Department_Name = department_Name;
            department.Contact_Person = contact_Person;
            department.Phone = phone;
            department.CollectionID = collectionID;
            department.Department_Head = department_Head;
            return department;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Code
        {
            get
            {
                return _Department_Code;
            }
            set
            {
                if (_Department_Code != value)
                {
                    OnDepartment_CodeChanging(value);
                    ReportPropertyChanging("Department_Code");
                    _Department_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_Code");
                    OnDepartment_CodeChanged();
                }
            }
        }
        private global::System.String _Department_Code;
        partial void OnDepartment_CodeChanging(global::System.String value);
        partial void OnDepartment_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                OnDepartment_NameChanging(value);
                ReportPropertyChanging("Department_Name");
                _Department_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department_Name");
                OnDepartment_NameChanged();
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Contact_Person
        {
            get
            {
                return _Contact_Person;
            }
            set
            {
                OnContact_PersonChanging(value);
                ReportPropertyChanging("Contact_Person");
                _Contact_Person = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Contact_Person");
                OnContact_PersonChanged();
            }
        }
        private global::System.Int32 _Contact_Person;
        partial void OnContact_PersonChanging(global::System.Int32 value);
        partial void OnContact_PersonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.Int32 _Phone;
        partial void OnPhoneChanging(global::System.Int32 value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private Nullable<global::System.Int32> _Fax;
        partial void OnFaxChanging(Nullable<global::System.Int32> value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CollectionID
        {
            get
            {
                return _CollectionID;
            }
            set
            {
                OnCollectionIDChanging(value);
                ReportPropertyChanging("CollectionID");
                _CollectionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollectionID");
                OnCollectionIDChanged();
            }
        }
        private global::System.Int32 _CollectionID;
        partial void OnCollectionIDChanging(global::System.Int32 value);
        partial void OnCollectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Department_Head
        {
            get
            {
                return _Department_Head;
            }
            set
            {
                OnDepartment_HeadChanging(value);
                ReportPropertyChanging("Department_Head");
                _Department_Head = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Department_Head");
                OnDepartment_HeadChanged();
            }
        }
        private global::System.Int32 _Department_Head;
        partial void OnDepartment_HeadChanging(global::System.Int32 value);
        partial void OnDepartment_HeadChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Department_CollectionPoint", "CollectionPoint")]
        public CollectionPoint CollectionPoint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionPoint>("Team4_ADModel.FK_Department_CollectionPoint", "CollectionPoint").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionPoint>("Team4_ADModel.FK_Department_CollectionPoint", "CollectionPoint").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CollectionPoint> CollectionPointReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionPoint>("Team4_ADModel.FK_Department_CollectionPoint", "CollectionPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CollectionPoint>("Team4_ADModel.FK_Department_CollectionPoint", "CollectionPoint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_DeptRequisition_Department", "DeptRequisition")]
        public EntityCollection<DeptRequisition> DeptRequisitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeptRequisition>("Team4_ADModel.FK_DeptRequisition_Department", "DeptRequisition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeptRequisition>("Team4_ADModel.FK_DeptRequisition_Department", "DeptRequisition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_EmpRequisition_Department", "EmpRequisition")]
        public EntityCollection<EmpRequisition> EmpRequisitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpRequisition>("Team4_ADModel.FK_EmpRequisition_Department", "EmpRequisition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpRequisition>("Team4_ADModel.FK_EmpRequisition_Department", "EmpRequisition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Pending_Department", "Pending")]
        public EntityCollection<Pending> Pendings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pending>("Team4_ADModel.FK_Pending_Department", "Pending");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pending>("Team4_ADModel.FK_Pending_Department", "Pending", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_PurchaseOrder_Department", "PurchaseOrder")]
        public EntityCollection<PurchaseOrder> PurchaseOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("Team4_ADModel.FK_PurchaseOrder_Department", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("Team4_ADModel.FK_PurchaseOrder_Department", "PurchaseOrder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="DepartmentRep")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DepartmentRep : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DepartmentRep object.
        /// </summary>
        /// <param name="repID">Initial value of the RepID property.</param>
        /// <param name="department_Code">Initial value of the Department_Code property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        public static DepartmentRep CreateDepartmentRep(global::System.Int32 repID, global::System.String department_Code, global::System.Int32 employeeID)
        {
            DepartmentRep departmentRep = new DepartmentRep();
            departmentRep.RepID = repID;
            departmentRep.Department_Code = department_Code;
            departmentRep.EmployeeID = employeeID;
            return departmentRep;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RepID
        {
            get
            {
                return _RepID;
            }
            set
            {
                if (_RepID != value)
                {
                    OnRepIDChanging(value);
                    ReportPropertyChanging("RepID");
                    _RepID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RepID");
                    OnRepIDChanged();
                }
            }
        }
        private global::System.Int32 _RepID;
        partial void OnRepIDChanging(global::System.Int32 value);
        partial void OnRepIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Code
        {
            get
            {
                return _Department_Code;
            }
            set
            {
                OnDepartment_CodeChanging(value);
                ReportPropertyChanging("Department_Code");
                _Department_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department_Code");
                OnDepartment_CodeChanged();
            }
        }
        private global::System.String _Department_Code;
        partial void OnDepartment_CodeChanging(global::System.String value);
        partial void OnDepartment_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="DepartmentView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DepartmentView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DepartmentView object.
        /// </summary>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="department_Code">Initial value of the Department_Code property.</param>
        public static DepartmentView CreateDepartmentView(global::System.String item_Code, global::System.String department_Code)
        {
            DepartmentView departmentView = new DepartmentView();
            departmentView.Item_Code = item_Code;
            departmentView.Department_Code = department_Code;
            return departmentView;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                if (_Item_Code != value)
                {
                    OnItem_CodeChanging(value);
                    ReportPropertyChanging("Item_Code");
                    _Item_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Item_Code");
                    OnItem_CodeChanged();
                }
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Requested_Quantity
        {
            get
            {
                return _Requested_Quantity;
            }
            set
            {
                OnRequested_QuantityChanging(value);
                ReportPropertyChanging("Requested_Quantity");
                _Requested_Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Requested_Quantity");
                OnRequested_QuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Requested_Quantity;
        partial void OnRequested_QuantityChanging(Nullable<global::System.Int32> value);
        partial void OnRequested_QuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Code
        {
            get
            {
                return _Department_Code;
            }
            set
            {
                if (_Department_Code != value)
                {
                    OnDepartment_CodeChanging(value);
                    ReportPropertyChanging("Department_Code");
                    _Department_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_Code");
                    OnDepartment_CodeChanged();
                }
            }
        }
        private global::System.String _Department_Code;
        partial void OnDepartment_CodeChanging(global::System.String value);
        partial void OnDepartment_CodeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="Dept_Collection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dept_Collection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Dept_Collection object.
        /// </summary>
        /// <param name="department_Code">Initial value of the Department_Code property.</param>
        /// <param name="place">Initial value of the Place property.</param>
        public static Dept_Collection CreateDept_Collection(global::System.String department_Code, global::System.String place)
        {
            Dept_Collection dept_Collection = new Dept_Collection();
            dept_Collection.Department_Code = department_Code;
            dept_Collection.Place = place;
            return dept_Collection;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Code
        {
            get
            {
                return _Department_Code;
            }
            set
            {
                if (_Department_Code != value)
                {
                    OnDepartment_CodeChanging(value);
                    ReportPropertyChanging("Department_Code");
                    _Department_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_Code");
                    OnDepartment_CodeChanged();
                }
            }
        }
        private global::System.String _Department_Code;
        partial void OnDepartment_CodeChanging(global::System.String value);
        partial void OnDepartment_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Place
        {
            get
            {
                return _Place;
            }
            set
            {
                if (_Place != value)
                {
                    OnPlaceChanging(value);
                    ReportPropertyChanging("Place");
                    _Place = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Place");
                    OnPlaceChanged();
                }
            }
        }
        private global::System.String _Place;
        partial void OnPlaceChanging(global::System.String value);
        partial void OnPlaceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="DeptRequisition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeptRequisition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeptRequisition object.
        /// </summary>
        /// <param name="dept_ReqID">Initial value of the Dept_ReqID property.</param>
        /// <param name="department_Code">Initial value of the Department_Code property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static DeptRequisition CreateDeptRequisition(global::System.Int32 dept_ReqID, global::System.String department_Code, global::System.DateTime date)
        {
            DeptRequisition deptRequisition = new DeptRequisition();
            deptRequisition.Dept_ReqID = dept_ReqID;
            deptRequisition.Department_Code = department_Code;
            deptRequisition.Date = date;
            return deptRequisition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Dept_ReqID
        {
            get
            {
                return _Dept_ReqID;
            }
            set
            {
                if (_Dept_ReqID != value)
                {
                    OnDept_ReqIDChanging(value);
                    ReportPropertyChanging("Dept_ReqID");
                    _Dept_ReqID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Dept_ReqID");
                    OnDept_ReqIDChanged();
                }
            }
        }
        private global::System.Int32 _Dept_ReqID;
        partial void OnDept_ReqIDChanging(global::System.Int32 value);
        partial void OnDept_ReqIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Code
        {
            get
            {
                return _Department_Code;
            }
            set
            {
                OnDepartment_CodeChanging(value);
                ReportPropertyChanging("Department_Code");
                _Department_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department_Code");
                OnDepartment_CodeChanged();
            }
        }
        private global::System.String _Department_Code;
        partial void OnDepartment_CodeChanging(global::System.String value);
        partial void OnDepartment_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status_Check
        {
            get
            {
                return _Status_Check;
            }
            set
            {
                OnStatus_CheckChanging(value);
                ReportPropertyChanging("Status_Check");
                _Status_Check = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status_Check");
                OnStatus_CheckChanged();
            }
        }
        private global::System.String _Status_Check;
        partial void OnStatus_CheckChanging(global::System.String value);
        partial void OnStatus_CheckChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_DeptRequisition_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("Team4_ADModel.FK_DeptRequisition_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("Team4_ADModel.FK_DeptRequisition_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("Team4_ADModel.FK_DeptRequisition_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("Team4_ADModel.FK_DeptRequisition_Department", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_DeptRequisitionDetail_DeptRequisition", "DeptRequisitionDetail")]
        public EntityCollection<DeptRequisitionDetail> DeptRequisitionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeptRequisitionDetail>("Team4_ADModel.FK_DeptRequisitionDetail_DeptRequisition", "DeptRequisitionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeptRequisitionDetail>("Team4_ADModel.FK_DeptRequisitionDetail_DeptRequisition", "DeptRequisitionDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Disbursement_DeptRequisition", "Disbursement")]
        public EntityCollection<Disbursement> Disbursements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Disbursement>("Team4_ADModel.FK_Disbursement_DeptRequisition", "Disbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Disbursement>("Team4_ADModel.FK_Disbursement_DeptRequisition", "Disbursement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="DeptRequisitionDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeptRequisitionDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeptRequisitionDetail object.
        /// </summary>
        /// <param name="dept_Req_DetailID">Initial value of the Dept_Req_DetailID property.</param>
        /// <param name="dept_ReqID">Initial value of the Dept_ReqID property.</param>
        /// <param name="emp_ReqID">Initial value of the Emp_ReqID property.</param>
        public static DeptRequisitionDetail CreateDeptRequisitionDetail(global::System.Int32 dept_Req_DetailID, global::System.Int32 dept_ReqID, global::System.Int32 emp_ReqID)
        {
            DeptRequisitionDetail deptRequisitionDetail = new DeptRequisitionDetail();
            deptRequisitionDetail.Dept_Req_DetailID = dept_Req_DetailID;
            deptRequisitionDetail.Dept_ReqID = dept_ReqID;
            deptRequisitionDetail.Emp_ReqID = emp_ReqID;
            return deptRequisitionDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Dept_Req_DetailID
        {
            get
            {
                return _Dept_Req_DetailID;
            }
            set
            {
                if (_Dept_Req_DetailID != value)
                {
                    OnDept_Req_DetailIDChanging(value);
                    ReportPropertyChanging("Dept_Req_DetailID");
                    _Dept_Req_DetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Dept_Req_DetailID");
                    OnDept_Req_DetailIDChanged();
                }
            }
        }
        private global::System.Int32 _Dept_Req_DetailID;
        partial void OnDept_Req_DetailIDChanging(global::System.Int32 value);
        partial void OnDept_Req_DetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Dept_ReqID
        {
            get
            {
                return _Dept_ReqID;
            }
            set
            {
                OnDept_ReqIDChanging(value);
                ReportPropertyChanging("Dept_ReqID");
                _Dept_ReqID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Dept_ReqID");
                OnDept_ReqIDChanged();
            }
        }
        private global::System.Int32 _Dept_ReqID;
        partial void OnDept_ReqIDChanging(global::System.Int32 value);
        partial void OnDept_ReqIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Emp_ReqID
        {
            get
            {
                return _Emp_ReqID;
            }
            set
            {
                OnEmp_ReqIDChanging(value);
                ReportPropertyChanging("Emp_ReqID");
                _Emp_ReqID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Emp_ReqID");
                OnEmp_ReqIDChanged();
            }
        }
        private global::System.Int32 _Emp_ReqID;
        partial void OnEmp_ReqIDChanging(global::System.Int32 value);
        partial void OnEmp_ReqIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_DeptRequisitionDetail_DeptRequisition", "DeptRequisition")]
        public DeptRequisition DeptRequisition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeptRequisition>("Team4_ADModel.FK_DeptRequisitionDetail_DeptRequisition", "DeptRequisition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeptRequisition>("Team4_ADModel.FK_DeptRequisitionDetail_DeptRequisition", "DeptRequisition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DeptRequisition> DeptRequisitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeptRequisition>("Team4_ADModel.FK_DeptRequisitionDetail_DeptRequisition", "DeptRequisition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DeptRequisition>("Team4_ADModel.FK_DeptRequisitionDetail_DeptRequisition", "DeptRequisition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_DeptRequisitionDetail_EmpRequisition", "EmpRequisition")]
        public EmpRequisition EmpRequisition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpRequisition>("Team4_ADModel.FK_DeptRequisitionDetail_EmpRequisition", "EmpRequisition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpRequisition>("Team4_ADModel.FK_DeptRequisitionDetail_EmpRequisition", "EmpRequisition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmpRequisition> EmpRequisitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpRequisition>("Team4_ADModel.FK_DeptRequisitionDetail_EmpRequisition", "EmpRequisition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmpRequisition>("Team4_ADModel.FK_DeptRequisitionDetail_EmpRequisition", "EmpRequisition", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="Disbursement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Disbursement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Disbursement object.
        /// </summary>
        /// <param name="disbursementID">Initial value of the DisbursementID property.</param>
        /// <param name="disburse_Date">Initial value of the Disburse_Date property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="department_ReqID">Initial value of the Department_ReqID property.</param>
        /// <param name="department">Initial value of the Department property.</param>
        public static Disbursement CreateDisbursement(global::System.Int32 disbursementID, global::System.DateTime disburse_Date, global::System.String status, global::System.Int32 department_ReqID, global::System.String department)
        {
            Disbursement disbursement = new Disbursement();
            disbursement.DisbursementID = disbursementID;
            disbursement.Disburse_Date = disburse_Date;
            disbursement.Status = status;
            disbursement.Department_ReqID = department_ReqID;
            disbursement.Department = department;
            return disbursement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementID
        {
            get
            {
                return _DisbursementID;
            }
            set
            {
                if (_DisbursementID != value)
                {
                    OnDisbursementIDChanging(value);
                    ReportPropertyChanging("DisbursementID");
                    _DisbursementID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisbursementID");
                    OnDisbursementIDChanged();
                }
            }
        }
        private global::System.Int32 _DisbursementID;
        partial void OnDisbursementIDChanging(global::System.Int32 value);
        partial void OnDisbursementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Disburse_Date
        {
            get
            {
                return _Disburse_Date;
            }
            set
            {
                OnDisburse_DateChanging(value);
                ReportPropertyChanging("Disburse_Date");
                _Disburse_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Disburse_Date");
                OnDisburse_DateChanged();
            }
        }
        private global::System.DateTime _Disburse_Date;
        partial void OnDisburse_DateChanging(global::System.DateTime value);
        partial void OnDisburse_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Department_ReqID
        {
            get
            {
                return _Department_ReqID;
            }
            set
            {
                OnDepartment_ReqIDChanging(value);
                ReportPropertyChanging("Department_ReqID");
                _Department_ReqID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Department_ReqID");
                OnDepartment_ReqIDChanged();
            }
        }
        private global::System.Int32 _Department_ReqID;
        partial void OnDepartment_ReqIDChanging(global::System.Int32 value);
        partial void OnDepartment_ReqIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department
        {
            get
            {
                return _Department;
            }
            set
            {
                OnDepartmentChanging(value);
                ReportPropertyChanging("Department");
                _Department = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department");
                OnDepartmentChanged();
            }
        }
        private global::System.String _Department;
        partial void OnDepartmentChanging(global::System.String value);
        partial void OnDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Dispatch_Status
        {
            get
            {
                return _Dispatch_Status;
            }
            set
            {
                OnDispatch_StatusChanging(value);
                ReportPropertyChanging("Dispatch_Status");
                _Dispatch_Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Dispatch_Status");
                OnDispatch_StatusChanged();
            }
        }
        private global::System.String _Dispatch_Status;
        partial void OnDispatch_StatusChanging(global::System.String value);
        partial void OnDispatch_StatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Disbursement_DeptRequisition", "DeptRequisition")]
        public DeptRequisition DeptRequisition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeptRequisition>("Team4_ADModel.FK_Disbursement_DeptRequisition", "DeptRequisition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeptRequisition>("Team4_ADModel.FK_Disbursement_DeptRequisition", "DeptRequisition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DeptRequisition> DeptRequisitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeptRequisition>("Team4_ADModel.FK_Disbursement_DeptRequisition", "DeptRequisition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DeptRequisition>("Team4_ADModel.FK_Disbursement_DeptRequisition", "DeptRequisition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Pending_Disbursement", "Pending")]
        public EntityCollection<Pending> Pendings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pending>("Team4_ADModel.FK_Pending_Disbursement", "Pending");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pending>("Team4_ADModel.FK_Pending_Disbursement", "Pending", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="DisbursementDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisbursementDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisbursementDetail object.
        /// </summary>
        /// <param name="disbursement_DetailID">Initial value of the Disbursement_DetailID property.</param>
        /// <param name="disbursementID">Initial value of the DisbursementID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="pending_Qty">Initial value of the Pending_Qty property.</param>
        /// <param name="outstanding_Type">Initial value of the Outstanding_Type property.</param>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="alloted">Initial value of the Alloted property.</param>
        public static DisbursementDetail CreateDisbursementDetail(global::System.Int32 disbursement_DetailID, global::System.Int32 disbursementID, global::System.Int32 quantity, global::System.Int32 pending_Qty, global::System.String outstanding_Type, global::System.String item_Code, global::System.Int32 alloted)
        {
            DisbursementDetail disbursementDetail = new DisbursementDetail();
            disbursementDetail.Disbursement_DetailID = disbursement_DetailID;
            disbursementDetail.DisbursementID = disbursementID;
            disbursementDetail.Quantity = quantity;
            disbursementDetail.Pending_Qty = pending_Qty;
            disbursementDetail.Outstanding_Type = outstanding_Type;
            disbursementDetail.Item_Code = item_Code;
            disbursementDetail.Alloted = alloted;
            return disbursementDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Disbursement_DetailID
        {
            get
            {
                return _Disbursement_DetailID;
            }
            set
            {
                if (_Disbursement_DetailID != value)
                {
                    OnDisbursement_DetailIDChanging(value);
                    ReportPropertyChanging("Disbursement_DetailID");
                    _Disbursement_DetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Disbursement_DetailID");
                    OnDisbursement_DetailIDChanged();
                }
            }
        }
        private global::System.Int32 _Disbursement_DetailID;
        partial void OnDisbursement_DetailIDChanging(global::System.Int32 value);
        partial void OnDisbursement_DetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementID
        {
            get
            {
                return _DisbursementID;
            }
            set
            {
                OnDisbursementIDChanging(value);
                ReportPropertyChanging("DisbursementID");
                _DisbursementID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementID");
                OnDisbursementIDChanged();
            }
        }
        private global::System.Int32 _DisbursementID;
        partial void OnDisbursementIDChanging(global::System.Int32 value);
        partial void OnDisbursementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Pending_Qty
        {
            get
            {
                return _Pending_Qty;
            }
            set
            {
                OnPending_QtyChanging(value);
                ReportPropertyChanging("Pending_Qty");
                _Pending_Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pending_Qty");
                OnPending_QtyChanged();
            }
        }
        private global::System.Int32 _Pending_Qty;
        partial void OnPending_QtyChanging(global::System.Int32 value);
        partial void OnPending_QtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Outstanding_Type
        {
            get
            {
                return _Outstanding_Type;
            }
            set
            {
                OnOutstanding_TypeChanging(value);
                ReportPropertyChanging("Outstanding_Type");
                _Outstanding_Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Outstanding_Type");
                OnOutstanding_TypeChanged();
            }
        }
        private global::System.String _Outstanding_Type;
        partial void OnOutstanding_TypeChanging(global::System.String value);
        partial void OnOutstanding_TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                OnItem_CodeChanging(value);
                ReportPropertyChanging("Item_Code");
                _Item_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Item_Code");
                OnItem_CodeChanged();
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Alloted
        {
            get
            {
                return _Alloted;
            }
            set
            {
                OnAllotedChanging(value);
                ReportPropertyChanging("Alloted");
                _Alloted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Alloted");
                OnAllotedChanged();
            }
        }
        private global::System.Int32 _Alloted;
        partial void OnAllotedChanging(global::System.Int32 value);
        partial void OnAllotedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_DisbursementDetail_Stock_Item", "Stock_Item")]
        public Stock_Item Stock_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_DisbursementDetail_Stock_Item", "Stock_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_DisbursementDetail_Stock_Item", "Stock_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Stock_Item> Stock_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_DisbursementDetail_Stock_Item", "Stock_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Stock_Item>("Team4_ADModel.FK_DisbursementDetail_Stock_Item", "Stock_Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="employeeName">Initial value of the EmployeeName property.</param>
        /// <param name="departmentCode">Initial value of the DepartmentCode property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="employeeType">Initial value of the EmployeeType property.</param>
        public static Employee CreateEmployee(global::System.Int32 employeeID, global::System.String employeeName, global::System.String departmentCode, global::System.String email, global::System.String employeeType)
        {
            Employee employee = new Employee();
            employee.EmployeeID = employeeID;
            employee.EmployeeName = employeeName;
            employee.DepartmentCode = departmentCode;
            employee.Email = email;
            employee.EmployeeType = employeeType;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                if (_EmployeeID != value)
                {
                    OnEmployeeIDChanging(value);
                    ReportPropertyChanging("EmployeeID");
                    _EmployeeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeID");
                    OnEmployeeIDChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeName
        {
            get
            {
                return _EmployeeName;
            }
            set
            {
                OnEmployeeNameChanging(value);
                ReportPropertyChanging("EmployeeName");
                _EmployeeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmployeeName");
                OnEmployeeNameChanged();
            }
        }
        private global::System.String _EmployeeName;
        partial void OnEmployeeNameChanging(global::System.String value);
        partial void OnEmployeeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DepartmentCode
        {
            get
            {
                return _DepartmentCode;
            }
            set
            {
                OnDepartmentCodeChanging(value);
                ReportPropertyChanging("DepartmentCode");
                _DepartmentCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DepartmentCode");
                OnDepartmentCodeChanged();
            }
        }
        private global::System.String _DepartmentCode;
        partial void OnDepartmentCodeChanging(global::System.String value);
        partial void OnDepartmentCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeType
        {
            get
            {
                return _EmployeeType;
            }
            set
            {
                OnEmployeeTypeChanging(value);
                ReportPropertyChanging("EmployeeType");
                _EmployeeType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmployeeType");
                OnEmployeeTypeChanged();
            }
        }
        private global::System.String _EmployeeType;
        partial void OnEmployeeTypeChanging(global::System.String value);
        partial void OnEmployeeTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TempType
        {
            get
            {
                return _TempType;
            }
            set
            {
                OnTempTypeChanging(value);
                ReportPropertyChanging("TempType");
                _TempType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TempType");
                OnTempTypeChanged();
            }
        }
        private global::System.String _TempType;
        partial void OnTempTypeChanging(global::System.String value);
        partial void OnTempTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_EmpRequisition_Employee", "EmpRequisition")]
        public EntityCollection<EmpRequisition> EmpRequisitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpRequisition>("Team4_ADModel.FK_EmpRequisition_Employee", "EmpRequisition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpRequisition>("Team4_ADModel.FK_EmpRequisition_Employee", "EmpRequisition", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="EmpRequisition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmpRequisition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmpRequisition object.
        /// </summary>
        /// <param name="emp_ReqID">Initial value of the Emp_ReqID property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="requested_Date">Initial value of the Requested_Date property.</param>
        /// <param name="department_Code">Initial value of the Department_Code property.</param>
        public static EmpRequisition CreateEmpRequisition(global::System.Int32 emp_ReqID, global::System.Int32 employeeID, global::System.DateTime requested_Date, global::System.String department_Code)
        {
            EmpRequisition empRequisition = new EmpRequisition();
            empRequisition.Emp_ReqID = emp_ReqID;
            empRequisition.EmployeeID = employeeID;
            empRequisition.Requested_Date = requested_Date;
            empRequisition.Department_Code = department_Code;
            return empRequisition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Emp_ReqID
        {
            get
            {
                return _Emp_ReqID;
            }
            set
            {
                if (_Emp_ReqID != value)
                {
                    OnEmp_ReqIDChanging(value);
                    ReportPropertyChanging("Emp_ReqID");
                    _Emp_ReqID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Emp_ReqID");
                    OnEmp_ReqIDChanged();
                }
            }
        }
        private global::System.Int32 _Emp_ReqID;
        partial void OnEmp_ReqIDChanging(global::System.Int32 value);
        partial void OnEmp_ReqIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Requested_Date
        {
            get
            {
                return _Requested_Date;
            }
            set
            {
                OnRequested_DateChanging(value);
                ReportPropertyChanging("Requested_Date");
                _Requested_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Requested_Date");
                OnRequested_DateChanged();
            }
        }
        private global::System.DateTime _Requested_Date;
        partial void OnRequested_DateChanging(global::System.DateTime value);
        partial void OnRequested_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Code
        {
            get
            {
                return _Department_Code;
            }
            set
            {
                OnDepartment_CodeChanging(value);
                ReportPropertyChanging("Department_Code");
                _Department_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department_Code");
                OnDepartment_CodeChanged();
            }
        }
        private global::System.String _Department_Code;
        partial void OnDepartment_CodeChanging(global::System.String value);
        partial void OnDepartment_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalRequested_Qty
        {
            get
            {
                return _TotalRequested_Qty;
            }
            set
            {
                OnTotalRequested_QtyChanging(value);
                ReportPropertyChanging("TotalRequested_Qty");
                _TotalRequested_Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalRequested_Qty");
                OnTotalRequested_QtyChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalRequested_Qty;
        partial void OnTotalRequested_QtyChanging(Nullable<global::System.Int32> value);
        partial void OnTotalRequested_QtyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_EmpRequisition_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("Team4_ADModel.FK_EmpRequisition_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("Team4_ADModel.FK_EmpRequisition_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("Team4_ADModel.FK_EmpRequisition_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("Team4_ADModel.FK_EmpRequisition_Department", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_DeptRequisitionDetail_EmpRequisition", "DeptRequisitionDetail")]
        public EntityCollection<DeptRequisitionDetail> DeptRequisitionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeptRequisitionDetail>("Team4_ADModel.FK_DeptRequisitionDetail_EmpRequisition", "DeptRequisitionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeptRequisitionDetail>("Team4_ADModel.FK_DeptRequisitionDetail_EmpRequisition", "DeptRequisitionDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_EmpRequisition_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("Team4_ADModel.FK_EmpRequisition_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("Team4_ADModel.FK_EmpRequisition_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("Team4_ADModel.FK_EmpRequisition_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("Team4_ADModel.FK_EmpRequisition_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_EmpRequisitionDetail_EmpRequisition", "EmpRequisitionDetail")]
        public EntityCollection<EmpRequisitionDetail> EmpRequisitionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpRequisitionDetail>("Team4_ADModel.FK_EmpRequisitionDetail_EmpRequisition", "EmpRequisitionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpRequisitionDetail>("Team4_ADModel.FK_EmpRequisitionDetail_EmpRequisition", "EmpRequisitionDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="EmpRequisitionDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmpRequisitionDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmpRequisitionDetail object.
        /// </summary>
        /// <param name="emp_Req_DetailID">Initial value of the Emp_Req_DetailID property.</param>
        /// <param name="emp_ReqID">Initial value of the Emp_ReqID property.</param>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="requested_Qty">Initial value of the Requested_Qty property.</param>
        public static EmpRequisitionDetail CreateEmpRequisitionDetail(global::System.Int32 emp_Req_DetailID, global::System.Int32 emp_ReqID, global::System.String item_Code, global::System.Int32 requested_Qty)
        {
            EmpRequisitionDetail empRequisitionDetail = new EmpRequisitionDetail();
            empRequisitionDetail.Emp_Req_DetailID = emp_Req_DetailID;
            empRequisitionDetail.Emp_ReqID = emp_ReqID;
            empRequisitionDetail.Item_Code = item_Code;
            empRequisitionDetail.Requested_Qty = requested_Qty;
            return empRequisitionDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Emp_Req_DetailID
        {
            get
            {
                return _Emp_Req_DetailID;
            }
            set
            {
                if (_Emp_Req_DetailID != value)
                {
                    OnEmp_Req_DetailIDChanging(value);
                    ReportPropertyChanging("Emp_Req_DetailID");
                    _Emp_Req_DetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Emp_Req_DetailID");
                    OnEmp_Req_DetailIDChanged();
                }
            }
        }
        private global::System.Int32 _Emp_Req_DetailID;
        partial void OnEmp_Req_DetailIDChanging(global::System.Int32 value);
        partial void OnEmp_Req_DetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Emp_ReqID
        {
            get
            {
                return _Emp_ReqID;
            }
            set
            {
                OnEmp_ReqIDChanging(value);
                ReportPropertyChanging("Emp_ReqID");
                _Emp_ReqID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Emp_ReqID");
                OnEmp_ReqIDChanged();
            }
        }
        private global::System.Int32 _Emp_ReqID;
        partial void OnEmp_ReqIDChanging(global::System.Int32 value);
        partial void OnEmp_ReqIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                OnItem_CodeChanging(value);
                ReportPropertyChanging("Item_Code");
                _Item_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Item_Code");
                OnItem_CodeChanged();
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Requested_Qty
        {
            get
            {
                return _Requested_Qty;
            }
            set
            {
                OnRequested_QtyChanging(value);
                ReportPropertyChanging("Requested_Qty");
                _Requested_Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Requested_Qty");
                OnRequested_QtyChanged();
            }
        }
        private global::System.Int32 _Requested_Qty;
        partial void OnRequested_QtyChanging(global::System.Int32 value);
        partial void OnRequested_QtyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_EmpRequisitionDetail_EmpRequisition", "EmpRequisition")]
        public EmpRequisition EmpRequisition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpRequisition>("Team4_ADModel.FK_EmpRequisitionDetail_EmpRequisition", "EmpRequisition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpRequisition>("Team4_ADModel.FK_EmpRequisitionDetail_EmpRequisition", "EmpRequisition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmpRequisition> EmpRequisitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpRequisition>("Team4_ADModel.FK_EmpRequisitionDetail_EmpRequisition", "EmpRequisition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmpRequisition>("Team4_ADModel.FK_EmpRequisitionDetail_EmpRequisition", "EmpRequisition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_EmpRequisitionDetail_Stock_Item", "Stock_Item")]
        public Stock_Item Stock_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_EmpRequisitionDetail_Stock_Item", "Stock_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_EmpRequisitionDetail_Stock_Item", "Stock_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Stock_Item> Stock_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_EmpRequisitionDetail_Stock_Item", "Stock_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Stock_Item>("Team4_ADModel.FK_EmpRequisitionDetail_Stock_Item", "Stock_Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="ItemRequested")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemRequested : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemRequested object.
        /// </summary>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        public static ItemRequested CreateItemRequested(global::System.String item_Code)
        {
            ItemRequested itemRequested = new ItemRequested();
            itemRequested.Item_Code = item_Code;
            return itemRequested;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                if (_Item_Code != value)
                {
                    OnItem_CodeChanging(value);
                    ReportPropertyChanging("Item_Code");
                    _Item_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Item_Code");
                    OnItem_CodeChanged();
                }
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Requested_Quantity
        {
            get
            {
                return _Requested_Quantity;
            }
            set
            {
                OnRequested_QuantityChanging(value);
                ReportPropertyChanging("Requested_Quantity");
                _Requested_Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Requested_Quantity");
                OnRequested_QuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Requested_Quantity;
        partial void OnRequested_QuantityChanging(Nullable<global::System.Int32> value);
        partial void OnRequested_QuantityChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="Pending")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pending : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pending object.
        /// </summary>
        /// <param name="pendingID">Initial value of the PendingID property.</param>
        /// <param name="disbursementID">Initial value of the DisbursementID property.</param>
        /// <param name="dept_Code">Initial value of the Dept_Code property.</param>
        public static Pending CreatePending(global::System.Int32 pendingID, global::System.Int32 disbursementID, global::System.String dept_Code)
        {
            Pending pending = new Pending();
            pending.PendingID = pendingID;
            pending.DisbursementID = disbursementID;
            pending.Dept_Code = dept_Code;
            return pending;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PendingID
        {
            get
            {
                return _PendingID;
            }
            set
            {
                if (_PendingID != value)
                {
                    OnPendingIDChanging(value);
                    ReportPropertyChanging("PendingID");
                    _PendingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PendingID");
                    OnPendingIDChanged();
                }
            }
        }
        private global::System.Int32 _PendingID;
        partial void OnPendingIDChanging(global::System.Int32 value);
        partial void OnPendingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisbursementID
        {
            get
            {
                return _DisbursementID;
            }
            set
            {
                OnDisbursementIDChanging(value);
                ReportPropertyChanging("DisbursementID");
                _DisbursementID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisbursementID");
                OnDisbursementIDChanged();
            }
        }
        private global::System.Int32 _DisbursementID;
        partial void OnDisbursementIDChanging(global::System.Int32 value);
        partial void OnDisbursementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Dept_Code
        {
            get
            {
                return _Dept_Code;
            }
            set
            {
                OnDept_CodeChanging(value);
                ReportPropertyChanging("Dept_Code");
                _Dept_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Dept_Code");
                OnDept_CodeChanged();
            }
        }
        private global::System.String _Dept_Code;
        partial void OnDept_CodeChanging(global::System.String value);
        partial void OnDept_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Pending_Status
        {
            get
            {
                return _Pending_Status;
            }
            set
            {
                OnPending_StatusChanging(value);
                ReportPropertyChanging("Pending_Status");
                _Pending_Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Pending_Status");
                OnPending_StatusChanged();
            }
        }
        private global::System.String _Pending_Status;
        partial void OnPending_StatusChanging(global::System.String value);
        partial void OnPending_StatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Pending_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("Team4_ADModel.FK_Pending_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("Team4_ADModel.FK_Pending_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("Team4_ADModel.FK_Pending_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("Team4_ADModel.FK_Pending_Department", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Pending_Disbursement", "Disbursement")]
        public Disbursement Disbursement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("Team4_ADModel.FK_Pending_Disbursement", "Disbursement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("Team4_ADModel.FK_Pending_Disbursement", "Disbursement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Disbursement> DisbursementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disbursement>("Team4_ADModel.FK_Pending_Disbursement", "Disbursement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Disbursement>("Team4_ADModel.FK_Pending_Disbursement", "Disbursement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Pending_Detail_Pending", "Pending_Detail")]
        public EntityCollection<Pending_Detail> Pending_Detail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pending_Detail>("Team4_ADModel.FK_Pending_Detail_Pending", "Pending_Detail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pending_Detail>("Team4_ADModel.FK_Pending_Detail_Pending", "Pending_Detail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="Pending_Detail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pending_Detail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pending_Detail object.
        /// </summary>
        /// <param name="pending_DetailID">Initial value of the Pending_DetailID property.</param>
        /// <param name="pendingID">Initial value of the PendingID property.</param>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static Pending_Detail CreatePending_Detail(global::System.Int32 pending_DetailID, global::System.Int32 pendingID, global::System.String item_Code, global::System.Int32 quantity)
        {
            Pending_Detail pending_Detail = new Pending_Detail();
            pending_Detail.Pending_DetailID = pending_DetailID;
            pending_Detail.PendingID = pendingID;
            pending_Detail.Item_Code = item_Code;
            pending_Detail.Quantity = quantity;
            return pending_Detail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Pending_DetailID
        {
            get
            {
                return _Pending_DetailID;
            }
            set
            {
                if (_Pending_DetailID != value)
                {
                    OnPending_DetailIDChanging(value);
                    ReportPropertyChanging("Pending_DetailID");
                    _Pending_DetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Pending_DetailID");
                    OnPending_DetailIDChanged();
                }
            }
        }
        private global::System.Int32 _Pending_DetailID;
        partial void OnPending_DetailIDChanging(global::System.Int32 value);
        partial void OnPending_DetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PendingID
        {
            get
            {
                return _PendingID;
            }
            set
            {
                OnPendingIDChanging(value);
                ReportPropertyChanging("PendingID");
                _PendingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PendingID");
                OnPendingIDChanged();
            }
        }
        private global::System.Int32 _PendingID;
        partial void OnPendingIDChanging(global::System.Int32 value);
        partial void OnPendingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                OnItem_CodeChanging(value);
                ReportPropertyChanging("Item_Code");
                _Item_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Item_Code");
                OnItem_CodeChanged();
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Pending_Detail_Pending", "Pending")]
        public Pending Pending
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pending>("Team4_ADModel.FK_Pending_Detail_Pending", "Pending").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pending>("Team4_ADModel.FK_Pending_Detail_Pending", "Pending").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pending> PendingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pending>("Team4_ADModel.FK_Pending_Detail_Pending", "Pending");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pending>("Team4_ADModel.FK_Pending_Detail_Pending", "Pending", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Pending_Detail_Stock_Item", "Stock_Item")]
        public Stock_Item Stock_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_Pending_Detail_Stock_Item", "Stock_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_Pending_Detail_Stock_Item", "Stock_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Stock_Item> Stock_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_Pending_Detail_Stock_Item", "Stock_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Stock_Item>("Team4_ADModel.FK_Pending_Detail_Stock_Item", "Stock_Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="PurchaseOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseOrder object.
        /// </summary>
        /// <param name="pONumber">Initial value of the PONumber property.</param>
        /// <param name="supplier_Code">Initial value of the Supplier_Code property.</param>
        /// <param name="department_Code">Initial value of the Department_Code property.</param>
        /// <param name="order_Date">Initial value of the Order_Date property.</param>
        public static PurchaseOrder CreatePurchaseOrder(global::System.String pONumber, global::System.String supplier_Code, global::System.String department_Code, global::System.DateTime order_Date)
        {
            PurchaseOrder purchaseOrder = new PurchaseOrder();
            purchaseOrder.PONumber = pONumber;
            purchaseOrder.Supplier_Code = supplier_Code;
            purchaseOrder.Department_Code = department_Code;
            purchaseOrder.Order_Date = order_Date;
            return purchaseOrder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PONumber
        {
            get
            {
                return _PONumber;
            }
            set
            {
                if (_PONumber != value)
                {
                    OnPONumberChanging(value);
                    ReportPropertyChanging("PONumber");
                    _PONumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PONumber");
                    OnPONumberChanged();
                }
            }
        }
        private global::System.String _PONumber;
        partial void OnPONumberChanging(global::System.String value);
        partial void OnPONumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Supplier_Code
        {
            get
            {
                return _Supplier_Code;
            }
            set
            {
                OnSupplier_CodeChanging(value);
                ReportPropertyChanging("Supplier_Code");
                _Supplier_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Supplier_Code");
                OnSupplier_CodeChanged();
            }
        }
        private global::System.String _Supplier_Code;
        partial void OnSupplier_CodeChanging(global::System.String value);
        partial void OnSupplier_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Code
        {
            get
            {
                return _Department_Code;
            }
            set
            {
                OnDepartment_CodeChanging(value);
                ReportPropertyChanging("Department_Code");
                _Department_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department_Code");
                OnDepartment_CodeChanged();
            }
        }
        private global::System.String _Department_Code;
        partial void OnDepartment_CodeChanging(global::System.String value);
        partial void OnDepartment_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Order_Date
        {
            get
            {
                return _Order_Date;
            }
            set
            {
                OnOrder_DateChanging(value);
                ReportPropertyChanging("Order_Date");
                _Order_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order_Date");
                OnOrder_DateChanged();
            }
        }
        private global::System.DateTime _Order_Date;
        partial void OnOrder_DateChanging(global::System.DateTime value);
        partial void OnOrder_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Deliver_Date
        {
            get
            {
                return _Deliver_Date;
            }
            set
            {
                OnDeliver_DateChanging(value);
                ReportPropertyChanging("Deliver_Date");
                _Deliver_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deliver_Date");
                OnDeliver_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Deliver_Date;
        partial void OnDeliver_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnDeliver_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Delivery_Number
        {
            get
            {
                return _Delivery_Number;
            }
            set
            {
                OnDelivery_NumberChanging(value);
                ReportPropertyChanging("Delivery_Number");
                _Delivery_Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Delivery_Number");
                OnDelivery_NumberChanged();
            }
        }
        private global::System.String _Delivery_Number;
        partial void OnDelivery_NumberChanging(global::System.String value);
        partial void OnDelivery_NumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Ordered_By
        {
            get
            {
                return _Ordered_By;
            }
            set
            {
                OnOrdered_ByChanging(value);
                ReportPropertyChanging("Ordered_By");
                _Ordered_By = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ordered_By");
                OnOrdered_ByChanged();
            }
        }
        private Nullable<global::System.Int32> _Ordered_By;
        partial void OnOrdered_ByChanging(Nullable<global::System.Int32> value);
        partial void OnOrdered_ByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Received_By
        {
            get
            {
                return _Received_By;
            }
            set
            {
                OnReceived_ByChanging(value);
                ReportPropertyChanging("Received_By");
                _Received_By = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Received_By");
                OnReceived_ByChanged();
            }
        }
        private Nullable<global::System.Int32> _Received_By;
        partial void OnReceived_ByChanging(Nullable<global::System.Int32> value);
        partial void OnReceived_ByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StoredRecord_Status
        {
            get
            {
                return _StoredRecord_Status;
            }
            set
            {
                OnStoredRecord_StatusChanging(value);
                ReportPropertyChanging("StoredRecord_Status");
                _StoredRecord_Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StoredRecord_Status");
                OnStoredRecord_StatusChanged();
            }
        }
        private global::System.String _StoredRecord_Status;
        partial void OnStoredRecord_StatusChanging(global::System.String value);
        partial void OnStoredRecord_StatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Request_Date
        {
            get
            {
                return _Request_Date;
            }
            set
            {
                OnRequest_DateChanging(value);
                ReportPropertyChanging("Request_Date");
                _Request_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Request_Date");
                OnRequest_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Request_Date;
        partial void OnRequest_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnRequest_DateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_PurchaseOrder_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("Team4_ADModel.FK_PurchaseOrder_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("Team4_ADModel.FK_PurchaseOrder_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("Team4_ADModel.FK_PurchaseOrder_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("Team4_ADModel.FK_PurchaseOrder_Department", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_PurchaseOrder_Supplier", "Supplier")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("Team4_ADModel.FK_PurchaseOrder_Supplier", "Supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("Team4_ADModel.FK_PurchaseOrder_Supplier", "Supplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("Team4_ADModel.FK_PurchaseOrder_Supplier", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("Team4_ADModel.FK_PurchaseOrder_Supplier", "Supplier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_PurchaseOrderDetail_PurchaseOrder", "PurchaseOrderDetail")]
        public EntityCollection<PurchaseOrderDetail> PurchaseOrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrderDetail>("Team4_ADModel.FK_PurchaseOrderDetail_PurchaseOrder", "PurchaseOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrderDetail>("Team4_ADModel.FK_PurchaseOrderDetail_PurchaseOrder", "PurchaseOrderDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="PurchaseOrderDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseOrderDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseOrderDetail object.
        /// </summary>
        /// <param name="pODetailID">Initial value of the PODetailID property.</param>
        /// <param name="pONumber">Initial value of the PONumber property.</param>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="order_Qty">Initial value of the Order_Qty property.</param>
        public static PurchaseOrderDetail CreatePurchaseOrderDetail(global::System.Int32 pODetailID, global::System.String pONumber, global::System.String item_Code, global::System.Int32 order_Qty)
        {
            PurchaseOrderDetail purchaseOrderDetail = new PurchaseOrderDetail();
            purchaseOrderDetail.PODetailID = pODetailID;
            purchaseOrderDetail.PONumber = pONumber;
            purchaseOrderDetail.Item_Code = item_Code;
            purchaseOrderDetail.Order_Qty = order_Qty;
            return purchaseOrderDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PODetailID
        {
            get
            {
                return _PODetailID;
            }
            set
            {
                if (_PODetailID != value)
                {
                    OnPODetailIDChanging(value);
                    ReportPropertyChanging("PODetailID");
                    _PODetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PODetailID");
                    OnPODetailIDChanged();
                }
            }
        }
        private global::System.Int32 _PODetailID;
        partial void OnPODetailIDChanging(global::System.Int32 value);
        partial void OnPODetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PONumber
        {
            get
            {
                return _PONumber;
            }
            set
            {
                OnPONumberChanging(value);
                ReportPropertyChanging("PONumber");
                _PONumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PONumber");
                OnPONumberChanged();
            }
        }
        private global::System.String _PONumber;
        partial void OnPONumberChanging(global::System.String value);
        partial void OnPONumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                OnItem_CodeChanging(value);
                ReportPropertyChanging("Item_Code");
                _Item_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Item_Code");
                OnItem_CodeChanged();
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Order_Qty
        {
            get
            {
                return _Order_Qty;
            }
            set
            {
                OnOrder_QtyChanging(value);
                ReportPropertyChanging("Order_Qty");
                _Order_Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order_Qty");
                OnOrder_QtyChanged();
            }
        }
        private global::System.Int32 _Order_Qty;
        partial void OnOrder_QtyChanging(global::System.Int32 value);
        partial void OnOrder_QtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Deliver_Qty
        {
            get
            {
                return _Deliver_Qty;
            }
            set
            {
                OnDeliver_QtyChanging(value);
                ReportPropertyChanging("Deliver_Qty");
                _Deliver_Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deliver_Qty");
                OnDeliver_QtyChanged();
            }
        }
        private Nullable<global::System.Int32> _Deliver_Qty;
        partial void OnDeliver_QtyChanging(Nullable<global::System.Int32> value);
        partial void OnDeliver_QtyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_PurchaseOrderDetail_PurchaseOrder", "PurchaseOrder")]
        public PurchaseOrder PurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("Team4_ADModel.FK_PurchaseOrderDetail_PurchaseOrder", "PurchaseOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("Team4_ADModel.FK_PurchaseOrderDetail_PurchaseOrder", "PurchaseOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseOrder> PurchaseOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("Team4_ADModel.FK_PurchaseOrderDetail_PurchaseOrder", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseOrder>("Team4_ADModel.FK_PurchaseOrderDetail_PurchaseOrder", "PurchaseOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_PurchaseOrderDetail_Stock_Item", "Stock_Item")]
        public Stock_Item Stock_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_PurchaseOrderDetail_Stock_Item", "Stock_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_PurchaseOrderDetail_Stock_Item", "Stock_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Stock_Item> Stock_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_PurchaseOrderDetail_Stock_Item", "Stock_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Stock_Item>("Team4_ADModel.FK_PurchaseOrderDetail_Stock_Item", "Stock_Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="PurchaseOrderDetailView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseOrderDetailView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseOrderDetailView object.
        /// </summary>
        /// <param name="order_Qty">Initial value of the Order_Qty property.</param>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="pONumber">Initial value of the PONumber property.</param>
        public static PurchaseOrderDetailView CreatePurchaseOrderDetailView(global::System.Int32 order_Qty, global::System.String item_Code, global::System.String pONumber)
        {
            PurchaseOrderDetailView purchaseOrderDetailView = new PurchaseOrderDetailView();
            purchaseOrderDetailView.Order_Qty = order_Qty;
            purchaseOrderDetailView.Item_Code = item_Code;
            purchaseOrderDetailView.PONumber = pONumber;
            return purchaseOrderDetailView;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Order_Qty
        {
            get
            {
                return _Order_Qty;
            }
            set
            {
                if (_Order_Qty != value)
                {
                    OnOrder_QtyChanging(value);
                    ReportPropertyChanging("Order_Qty");
                    _Order_Qty = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Order_Qty");
                    OnOrder_QtyChanged();
                }
            }
        }
        private global::System.Int32 _Order_Qty;
        partial void OnOrder_QtyChanging(global::System.Int32 value);
        partial void OnOrder_QtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Deliver_Qty
        {
            get
            {
                return _Deliver_Qty;
            }
            set
            {
                OnDeliver_QtyChanging(value);
                ReportPropertyChanging("Deliver_Qty");
                _Deliver_Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deliver_Qty");
                OnDeliver_QtyChanged();
            }
        }
        private Nullable<global::System.Int32> _Deliver_Qty;
        partial void OnDeliver_QtyChanging(Nullable<global::System.Int32> value);
        partial void OnDeliver_QtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                if (_Item_Code != value)
                {
                    OnItem_CodeChanging(value);
                    ReportPropertyChanging("Item_Code");
                    _Item_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Item_Code");
                    OnItem_CodeChanged();
                }
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PONumber
        {
            get
            {
                return _PONumber;
            }
            set
            {
                if (_PONumber != value)
                {
                    OnPONumberChanging(value);
                    ReportPropertyChanging("PONumber");
                    _PONumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PONumber");
                    OnPONumberChanged();
                }
            }
        }
        private global::System.String _PONumber;
        partial void OnPONumberChanging(global::System.String value);
        partial void OnPONumberChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="ReorderStockView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReorderStockView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReorderStockView object.
        /// </summary>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="reorder_Level">Initial value of the Reorder_Level property.</param>
        /// <param name="reorder_Qty">Initial value of the Reorder_Qty property.</param>
        /// <param name="unit_of_Measure">Initial value of the Unit_of_Measure property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static ReorderStockView CreateReorderStockView(global::System.String item_Code, global::System.Int32 reorder_Level, global::System.Int32 reorder_Qty, global::System.String unit_of_Measure, global::System.Int32 quantity)
        {
            ReorderStockView reorderStockView = new ReorderStockView();
            reorderStockView.Item_Code = item_Code;
            reorderStockView.Reorder_Level = reorder_Level;
            reorderStockView.Reorder_Qty = reorder_Qty;
            reorderStockView.Unit_of_Measure = unit_of_Measure;
            reorderStockView.Quantity = quantity;
            return reorderStockView;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                if (_Item_Code != value)
                {
                    OnItem_CodeChanging(value);
                    ReportPropertyChanging("Item_Code");
                    _Item_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Item_Code");
                    OnItem_CodeChanged();
                }
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reorder_Level
        {
            get
            {
                return _Reorder_Level;
            }
            set
            {
                if (_Reorder_Level != value)
                {
                    OnReorder_LevelChanging(value);
                    ReportPropertyChanging("Reorder_Level");
                    _Reorder_Level = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Reorder_Level");
                    OnReorder_LevelChanged();
                }
            }
        }
        private global::System.Int32 _Reorder_Level;
        partial void OnReorder_LevelChanging(global::System.Int32 value);
        partial void OnReorder_LevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reorder_Qty
        {
            get
            {
                return _Reorder_Qty;
            }
            set
            {
                if (_Reorder_Qty != value)
                {
                    OnReorder_QtyChanging(value);
                    ReportPropertyChanging("Reorder_Qty");
                    _Reorder_Qty = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Reorder_Qty");
                    OnReorder_QtyChanged();
                }
            }
        }
        private global::System.Int32 _Reorder_Qty;
        partial void OnReorder_QtyChanging(global::System.Int32 value);
        partial void OnReorder_QtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Unit_of_Measure
        {
            get
            {
                return _Unit_of_Measure;
            }
            set
            {
                if (_Unit_of_Measure != value)
                {
                    OnUnit_of_MeasureChanging(value);
                    ReportPropertyChanging("Unit_of_Measure");
                    _Unit_of_Measure = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Unit_of_Measure");
                    OnUnit_of_MeasureChanged();
                }
            }
        }
        private global::System.String _Unit_of_Measure;
        partial void OnUnit_of_MeasureChanging(global::System.String value);
        partial void OnUnit_of_MeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    OnQuantityChanging(value);
                    ReportPropertyChanging("Quantity");
                    _Quantity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Quantity");
                    OnQuantityChanged();
                }
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="RetrievalDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RetrievalDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RetrievalDetail object.
        /// </summary>
        /// <param name="detailID">Initial value of the DetailID property.</param>
        /// <param name="retrievalID">Initial value of the RetrievalID property.</param>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static RetrievalDetail CreateRetrievalDetail(global::System.Int32 detailID, global::System.Int32 retrievalID, global::System.String item_Code, global::System.Int32 quantity)
        {
            RetrievalDetail retrievalDetail = new RetrievalDetail();
            retrievalDetail.DetailID = detailID;
            retrievalDetail.RetrievalID = retrievalID;
            retrievalDetail.Item_Code = item_Code;
            retrievalDetail.Quantity = quantity;
            return retrievalDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DetailID
        {
            get
            {
                return _DetailID;
            }
            set
            {
                if (_DetailID != value)
                {
                    OnDetailIDChanging(value);
                    ReportPropertyChanging("DetailID");
                    _DetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DetailID");
                    OnDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _DetailID;
        partial void OnDetailIDChanging(global::System.Int32 value);
        partial void OnDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RetrievalID
        {
            get
            {
                return _RetrievalID;
            }
            set
            {
                OnRetrievalIDChanging(value);
                ReportPropertyChanging("RetrievalID");
                _RetrievalID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RetrievalID");
                OnRetrievalIDChanged();
            }
        }
        private global::System.Int32 _RetrievalID;
        partial void OnRetrievalIDChanging(global::System.Int32 value);
        partial void OnRetrievalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                OnItem_CodeChanging(value);
                ReportPropertyChanging("Item_Code");
                _Item_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Item_Code");
                OnItem_CodeChanged();
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Pending_Quantity
        {
            get
            {
                return _Pending_Quantity;
            }
            set
            {
                OnPending_QuantityChanging(value);
                ReportPropertyChanging("Pending_Quantity");
                _Pending_Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pending_Quantity");
                OnPending_QuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Pending_Quantity;
        partial void OnPending_QuantityChanging(Nullable<global::System.Int32> value);
        partial void OnPending_QuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Retrieved_Quantity
        {
            get
            {
                return _Retrieved_Quantity;
            }
            set
            {
                OnRetrieved_QuantityChanging(value);
                ReportPropertyChanging("Retrieved_Quantity");
                _Retrieved_Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Retrieved_Quantity");
                OnRetrieved_QuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Retrieved_Quantity;
        partial void OnRetrieved_QuantityChanging(Nullable<global::System.Int32> value);
        partial void OnRetrieved_QuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_RetrievalDetail_RetrievalMaster", "RetrievalMaster")]
        public RetrievalMaster RetrievalMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RetrievalMaster>("Team4_ADModel.FK_RetrievalDetail_RetrievalMaster", "RetrievalMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RetrievalMaster>("Team4_ADModel.FK_RetrievalDetail_RetrievalMaster", "RetrievalMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RetrievalMaster> RetrievalMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RetrievalMaster>("Team4_ADModel.FK_RetrievalDetail_RetrievalMaster", "RetrievalMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RetrievalMaster>("Team4_ADModel.FK_RetrievalDetail_RetrievalMaster", "RetrievalMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_RetrievalDetail_Stock_Item", "Stock_Item")]
        public Stock_Item Stock_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_RetrievalDetail_Stock_Item", "Stock_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_RetrievalDetail_Stock_Item", "Stock_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Stock_Item> Stock_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_RetrievalDetail_Stock_Item", "Stock_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Stock_Item>("Team4_ADModel.FK_RetrievalDetail_Stock_Item", "Stock_Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="RetrievalMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RetrievalMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RetrievalMaster object.
        /// </summary>
        /// <param name="retrievalID">Initial value of the RetrievalID property.</param>
        public static RetrievalMaster CreateRetrievalMaster(global::System.Int32 retrievalID)
        {
            RetrievalMaster retrievalMaster = new RetrievalMaster();
            retrievalMaster.RetrievalID = retrievalID;
            return retrievalMaster;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RetrievalID
        {
            get
            {
                return _RetrievalID;
            }
            set
            {
                if (_RetrievalID != value)
                {
                    OnRetrievalIDChanging(value);
                    ReportPropertyChanging("RetrievalID");
                    _RetrievalID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RetrievalID");
                    OnRetrievalIDChanged();
                }
            }
        }
        private global::System.Int32 _RetrievalID;
        partial void OnRetrievalIDChanging(global::System.Int32 value);
        partial void OnRetrievalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Retrieval_Date
        {
            get
            {
                return _Retrieval_Date;
            }
            set
            {
                OnRetrieval_DateChanging(value);
                ReportPropertyChanging("Retrieval_Date");
                _Retrieval_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Retrieval_Date");
                OnRetrieval_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Retrieval_Date;
        partial void OnRetrieval_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnRetrieval_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status_Check
        {
            get
            {
                return _Status_Check;
            }
            set
            {
                OnStatus_CheckChanging(value);
                ReportPropertyChanging("Status_Check");
                _Status_Check = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status_Check");
                OnStatus_CheckChanged();
            }
        }
        private global::System.String _Status_Check;
        partial void OnStatus_CheckChanging(global::System.String value);
        partial void OnStatus_CheckChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_RetrievalDetail_RetrievalMaster", "RetrievalDetail")]
        public EntityCollection<RetrievalDetail> RetrievalDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RetrievalDetail>("Team4_ADModel.FK_RetrievalDetail_RetrievalMaster", "RetrievalDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RetrievalDetail>("Team4_ADModel.FK_RetrievalDetail_RetrievalMaster", "RetrievalDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="SelectEmpRequisition_View")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SelectEmpRequisition_View : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SelectEmpRequisition_View object.
        /// </summary>
        /// <param name="emp_ReqID">Initial value of the Emp_ReqID property.</param>
        /// <param name="employeeName">Initial value of the EmployeeName property.</param>
        /// <param name="requested_Date">Initial value of the Requested_Date property.</param>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        /// <param name="department_Code">Initial value of the Department_Code property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        public static SelectEmpRequisition_View CreateSelectEmpRequisition_View(global::System.Int32 emp_ReqID, global::System.String employeeName, global::System.DateTime requested_Date, global::System.String department_Name, global::System.String department_Code, global::System.Int32 employeeID)
        {
            SelectEmpRequisition_View selectEmpRequisition_View = new SelectEmpRequisition_View();
            selectEmpRequisition_View.Emp_ReqID = emp_ReqID;
            selectEmpRequisition_View.EmployeeName = employeeName;
            selectEmpRequisition_View.Requested_Date = requested_Date;
            selectEmpRequisition_View.Department_Name = department_Name;
            selectEmpRequisition_View.Department_Code = department_Code;
            selectEmpRequisition_View.EmployeeID = employeeID;
            return selectEmpRequisition_View;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Emp_ReqID
        {
            get
            {
                return _Emp_ReqID;
            }
            set
            {
                if (_Emp_ReqID != value)
                {
                    OnEmp_ReqIDChanging(value);
                    ReportPropertyChanging("Emp_ReqID");
                    _Emp_ReqID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Emp_ReqID");
                    OnEmp_ReqIDChanged();
                }
            }
        }
        private global::System.Int32 _Emp_ReqID;
        partial void OnEmp_ReqIDChanging(global::System.Int32 value);
        partial void OnEmp_ReqIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeName
        {
            get
            {
                return _EmployeeName;
            }
            set
            {
                if (_EmployeeName != value)
                {
                    OnEmployeeNameChanging(value);
                    ReportPropertyChanging("EmployeeName");
                    _EmployeeName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EmployeeName");
                    OnEmployeeNameChanged();
                }
            }
        }
        private global::System.String _EmployeeName;
        partial void OnEmployeeNameChanging(global::System.String value);
        partial void OnEmployeeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Requested_Date
        {
            get
            {
                return _Requested_Date;
            }
            set
            {
                if (_Requested_Date != value)
                {
                    OnRequested_DateChanging(value);
                    ReportPropertyChanging("Requested_Date");
                    _Requested_Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Requested_Date");
                    OnRequested_DateChanged();
                }
            }
        }
        private global::System.DateTime _Requested_Date;
        partial void OnRequested_DateChanging(global::System.DateTime value);
        partial void OnRequested_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                if (_Department_Name != value)
                {
                    OnDepartment_NameChanging(value);
                    ReportPropertyChanging("Department_Name");
                    _Department_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_Name");
                    OnDepartment_NameChanged();
                }
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalRequested_Qty
        {
            get
            {
                return _TotalRequested_Qty;
            }
            set
            {
                OnTotalRequested_QtyChanging(value);
                ReportPropertyChanging("TotalRequested_Qty");
                _TotalRequested_Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalRequested_Qty");
                OnTotalRequested_QtyChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalRequested_Qty;
        partial void OnTotalRequested_QtyChanging(Nullable<global::System.Int32> value);
        partial void OnTotalRequested_QtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Code
        {
            get
            {
                return _Department_Code;
            }
            set
            {
                if (_Department_Code != value)
                {
                    OnDepartment_CodeChanging(value);
                    ReportPropertyChanging("Department_Code");
                    _Department_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_Code");
                    OnDepartment_CodeChanged();
                }
            }
        }
        private global::System.String _Department_Code;
        partial void OnDepartment_CodeChanging(global::System.String value);
        partial void OnDepartment_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                if (_EmployeeID != value)
                {
                    OnEmployeeIDChanging(value);
                    ReportPropertyChanging("EmployeeID");
                    _EmployeeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeID");
                    OnEmployeeIDChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="SelectRequestDetail_View")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SelectRequestDetail_View : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SelectRequestDetail_View object.
        /// </summary>
        /// <param name="emp_Req_DetailID">Initial value of the Emp_Req_DetailID property.</param>
        /// <param name="emp_ReqID">Initial value of the Emp_ReqID property.</param>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="requested_Qty">Initial value of the Requested_Qty property.</param>
        /// <param name="category_Name">Initial value of the Category_Name property.</param>
        public static SelectRequestDetail_View CreateSelectRequestDetail_View(global::System.Int32 emp_Req_DetailID, global::System.Int32 emp_ReqID, global::System.String item_Code, global::System.Int32 requested_Qty, global::System.String category_Name)
        {
            SelectRequestDetail_View selectRequestDetail_View = new SelectRequestDetail_View();
            selectRequestDetail_View.Emp_Req_DetailID = emp_Req_DetailID;
            selectRequestDetail_View.Emp_ReqID = emp_ReqID;
            selectRequestDetail_View.Item_Code = item_Code;
            selectRequestDetail_View.Requested_Qty = requested_Qty;
            selectRequestDetail_View.Category_Name = category_Name;
            return selectRequestDetail_View;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Emp_Req_DetailID
        {
            get
            {
                return _Emp_Req_DetailID;
            }
            set
            {
                if (_Emp_Req_DetailID != value)
                {
                    OnEmp_Req_DetailIDChanging(value);
                    ReportPropertyChanging("Emp_Req_DetailID");
                    _Emp_Req_DetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Emp_Req_DetailID");
                    OnEmp_Req_DetailIDChanged();
                }
            }
        }
        private global::System.Int32 _Emp_Req_DetailID;
        partial void OnEmp_Req_DetailIDChanging(global::System.Int32 value);
        partial void OnEmp_Req_DetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Emp_ReqID
        {
            get
            {
                return _Emp_ReqID;
            }
            set
            {
                if (_Emp_ReqID != value)
                {
                    OnEmp_ReqIDChanging(value);
                    ReportPropertyChanging("Emp_ReqID");
                    _Emp_ReqID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Emp_ReqID");
                    OnEmp_ReqIDChanged();
                }
            }
        }
        private global::System.Int32 _Emp_ReqID;
        partial void OnEmp_ReqIDChanging(global::System.Int32 value);
        partial void OnEmp_ReqIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                if (_Item_Code != value)
                {
                    OnItem_CodeChanging(value);
                    ReportPropertyChanging("Item_Code");
                    _Item_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Item_Code");
                    OnItem_CodeChanged();
                }
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Requested_Qty
        {
            get
            {
                return _Requested_Qty;
            }
            set
            {
                if (_Requested_Qty != value)
                {
                    OnRequested_QtyChanging(value);
                    ReportPropertyChanging("Requested_Qty");
                    _Requested_Qty = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Requested_Qty");
                    OnRequested_QtyChanged();
                }
            }
        }
        private global::System.Int32 _Requested_Qty;
        partial void OnRequested_QtyChanging(global::System.Int32 value);
        partial void OnRequested_QtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category_Name
        {
            get
            {
                return _Category_Name;
            }
            set
            {
                if (_Category_Name != value)
                {
                    OnCategory_NameChanging(value);
                    ReportPropertyChanging("Category_Name");
                    _Category_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Category_Name");
                    OnCategory_NameChanged();
                }
            }
        }
        private global::System.String _Category_Name;
        partial void OnCategory_NameChanging(global::System.String value);
        partial void OnCategory_NameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="Stock_Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Stock_Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Stock_Item object.
        /// </summary>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="reorder_Level">Initial value of the Reorder_Level property.</param>
        /// <param name="reorder_Qty">Initial value of the Reorder_Qty property.</param>
        /// <param name="unit_of_Measure">Initial value of the Unit_of_Measure property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static Stock_Item CreateStock_Item(global::System.String item_Code, global::System.Int32 categoryID, global::System.Int32 reorder_Level, global::System.Int32 reorder_Qty, global::System.String unit_of_Measure, global::System.Int32 quantity)
        {
            Stock_Item stock_Item = new Stock_Item();
            stock_Item.Item_Code = item_Code;
            stock_Item.CategoryID = categoryID;
            stock_Item.Reorder_Level = reorder_Level;
            stock_Item.Reorder_Qty = reorder_Qty;
            stock_Item.Unit_of_Measure = unit_of_Measure;
            stock_Item.Quantity = quantity;
            return stock_Item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                if (_Item_Code != value)
                {
                    OnItem_CodeChanging(value);
                    ReportPropertyChanging("Item_Code");
                    _Item_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Item_Code");
                    OnItem_CodeChanged();
                }
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reorder_Level
        {
            get
            {
                return _Reorder_Level;
            }
            set
            {
                OnReorder_LevelChanging(value);
                ReportPropertyChanging("Reorder_Level");
                _Reorder_Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reorder_Level");
                OnReorder_LevelChanged();
            }
        }
        private global::System.Int32 _Reorder_Level;
        partial void OnReorder_LevelChanging(global::System.Int32 value);
        partial void OnReorder_LevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reorder_Qty
        {
            get
            {
                return _Reorder_Qty;
            }
            set
            {
                OnReorder_QtyChanging(value);
                ReportPropertyChanging("Reorder_Qty");
                _Reorder_Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reorder_Qty");
                OnReorder_QtyChanged();
            }
        }
        private global::System.Int32 _Reorder_Qty;
        partial void OnReorder_QtyChanging(global::System.Int32 value);
        partial void OnReorder_QtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Unit_of_Measure
        {
            get
            {
                return _Unit_of_Measure;
            }
            set
            {
                OnUnit_of_MeasureChanging(value);
                ReportPropertyChanging("Unit_of_Measure");
                _Unit_of_Measure = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Unit_of_Measure");
                OnUnit_of_MeasureChanged();
            }
        }
        private global::System.String _Unit_of_Measure;
        partial void OnUnit_of_MeasureChanging(global::System.String value);
        partial void OnUnit_of_MeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Acknowledgement_Stock_Item", "Acknowledgement")]
        public EntityCollection<Acknowledgement> Acknowledgements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Acknowledgement>("Team4_ADModel.FK_Acknowledgement_Stock_Item", "Acknowledgement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Acknowledgement>("Team4_ADModel.FK_Acknowledgement_Stock_Item", "Acknowledgement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_AdjustmentDetail_Stock_Item", "AdjustmentDetail")]
        public EntityCollection<AdjustmentDetail> AdjustmentDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdjustmentDetail>("Team4_ADModel.FK_AdjustmentDetail_Stock_Item", "AdjustmentDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdjustmentDetail>("Team4_ADModel.FK_AdjustmentDetail_Stock_Item", "AdjustmentDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Stock_Item_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Team4_ADModel.FK_Stock_Item_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Team4_ADModel.FK_Stock_Item_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Team4_ADModel.FK_Stock_Item_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("Team4_ADModel.FK_Stock_Item_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Stock_Item_Category1", "Category")]
        public Category Category1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Team4_ADModel.FK_Stock_Item_Category1", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Team4_ADModel.FK_Stock_Item_Category1", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> Category1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Team4_ADModel.FK_Stock_Item_Category1", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("Team4_ADModel.FK_Stock_Item_Category1", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_DisbursementDetail_Stock_Item", "DisbursementDetail")]
        public EntityCollection<DisbursementDetail> DisbursementDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisbursementDetail>("Team4_ADModel.FK_DisbursementDetail_Stock_Item", "DisbursementDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisbursementDetail>("Team4_ADModel.FK_DisbursementDetail_Stock_Item", "DisbursementDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_EmpRequisitionDetail_Stock_Item", "EmpRequisitionDetail")]
        public EntityCollection<EmpRequisitionDetail> EmpRequisitionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpRequisitionDetail>("Team4_ADModel.FK_EmpRequisitionDetail_Stock_Item", "EmpRequisitionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpRequisitionDetail>("Team4_ADModel.FK_EmpRequisitionDetail_Stock_Item", "EmpRequisitionDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_Pending_Detail_Stock_Item", "Pending_Detail")]
        public EntityCollection<Pending_Detail> Pending_Detail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pending_Detail>("Team4_ADModel.FK_Pending_Detail_Stock_Item", "Pending_Detail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pending_Detail>("Team4_ADModel.FK_Pending_Detail_Stock_Item", "Pending_Detail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_PurchaseOrderDetail_Stock_Item", "PurchaseOrderDetail")]
        public EntityCollection<PurchaseOrderDetail> PurchaseOrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrderDetail>("Team4_ADModel.FK_PurchaseOrderDetail_Stock_Item", "PurchaseOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrderDetail>("Team4_ADModel.FK_PurchaseOrderDetail_Stock_Item", "PurchaseOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_RetrievalDetail_Stock_Item", "RetrievalDetail")]
        public EntityCollection<RetrievalDetail> RetrievalDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RetrievalDetail>("Team4_ADModel.FK_RetrievalDetail_Stock_Item", "RetrievalDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RetrievalDetail>("Team4_ADModel.FK_RetrievalDetail_Stock_Item", "RetrievalDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_StockHistory_Stock_Item", "StockHistory")]
        public EntityCollection<StockHistory> StockHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StockHistory>("Team4_ADModel.FK_StockHistory_Stock_Item", "StockHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StockHistory>("Team4_ADModel.FK_StockHistory_Stock_Item", "StockHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="StockHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StockHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StockHistory object.
        /// </summary>
        /// <param name="stock_HistoryID">Initial value of the Stock_HistoryID property.</param>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="updateBy">Initial value of the UpdateBy property.</param>
        public static StockHistory CreateStockHistory(global::System.Int32 stock_HistoryID, global::System.String item_Code, global::System.String description, global::System.Int32 quantity, global::System.DateTime updateDate, global::System.Int32 updateBy)
        {
            StockHistory stockHistory = new StockHistory();
            stockHistory.Stock_HistoryID = stock_HistoryID;
            stockHistory.Item_Code = item_Code;
            stockHistory.Description = description;
            stockHistory.Quantity = quantity;
            stockHistory.UpdateDate = updateDate;
            stockHistory.UpdateBy = updateBy;
            return stockHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Stock_HistoryID
        {
            get
            {
                return _Stock_HistoryID;
            }
            set
            {
                if (_Stock_HistoryID != value)
                {
                    OnStock_HistoryIDChanging(value);
                    ReportPropertyChanging("Stock_HistoryID");
                    _Stock_HistoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Stock_HistoryID");
                    OnStock_HistoryIDChanged();
                }
            }
        }
        private global::System.Int32 _Stock_HistoryID;
        partial void OnStock_HistoryIDChanging(global::System.Int32 value);
        partial void OnStock_HistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                OnItem_CodeChanging(value);
                ReportPropertyChanging("Item_Code");
                _Item_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Item_Code");
                OnItem_CodeChanged();
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private global::System.Int32 _UpdateBy;
        partial void OnUpdateByChanging(global::System.Int32 value);
        partial void OnUpdateByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_StockHistory_Stock_Item", "Stock_Item")]
        public Stock_Item Stock_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_StockHistory_Stock_Item", "Stock_Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_StockHistory_Stock_Item", "Stock_Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Stock_Item> Stock_ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock_Item>("Team4_ADModel.FK_StockHistory_Stock_Item", "Stock_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Stock_Item>("Team4_ADModel.FK_StockHistory_Stock_Item", "Stock_Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="Supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier object.
        /// </summary>
        /// <param name="supplier_Code">Initial value of the Supplier_Code property.</param>
        /// <param name="supplier_Name">Initial value of the Supplier_Name property.</param>
        /// <param name="contact_Name">Initial value of the Contact_Name property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        public static Supplier CreateSupplier(global::System.String supplier_Code, global::System.String supplier_Name, global::System.String contact_Name, global::System.String phone, global::System.String address)
        {
            Supplier supplier = new Supplier();
            supplier.Supplier_Code = supplier_Code;
            supplier.Supplier_Name = supplier_Name;
            supplier.Contact_Name = contact_Name;
            supplier.Phone = phone;
            supplier.Address = address;
            return supplier;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Supplier_Code
        {
            get
            {
                return _Supplier_Code;
            }
            set
            {
                if (_Supplier_Code != value)
                {
                    OnSupplier_CodeChanging(value);
                    ReportPropertyChanging("Supplier_Code");
                    _Supplier_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Supplier_Code");
                    OnSupplier_CodeChanged();
                }
            }
        }
        private global::System.String _Supplier_Code;
        partial void OnSupplier_CodeChanging(global::System.String value);
        partial void OnSupplier_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Supplier_Name
        {
            get
            {
                return _Supplier_Name;
            }
            set
            {
                OnSupplier_NameChanging(value);
                ReportPropertyChanging("Supplier_Name");
                _Supplier_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Supplier_Name");
                OnSupplier_NameChanged();
            }
        }
        private global::System.String _Supplier_Name;
        partial void OnSupplier_NameChanging(global::System.String value);
        partial void OnSupplier_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Contact_Name
        {
            get
            {
                return _Contact_Name;
            }
            set
            {
                OnContact_NameChanging(value);
                ReportPropertyChanging("Contact_Name");
                _Contact_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Contact_Name");
                OnContact_NameChanged();
            }
        }
        private global::System.String _Contact_Name;
        partial void OnContact_NameChanging(global::System.String value);
        partial void OnContact_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GST_RegNo
        {
            get
            {
                return _GST_RegNo;
            }
            set
            {
                OnGST_RegNoChanging(value);
                ReportPropertyChanging("GST_RegNo");
                _GST_RegNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GST_RegNo");
                OnGST_RegNoChanged();
            }
        }
        private global::System.String _GST_RegNo;
        partial void OnGST_RegNoChanging(global::System.String value);
        partial void OnGST_RegNoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Team4_ADModel", "FK_PurchaseOrder_Supplier", "PurchaseOrder")]
        public EntityCollection<PurchaseOrder> PurchaseOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("Team4_ADModel.FK_PurchaseOrder_Supplier", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("Team4_ADModel.FK_PurchaseOrder_Supplier", "PurchaseOrder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="vw_collectionpoint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_collectionpoint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_collectionpoint object.
        /// </summary>
        /// <param name="sno">Initial value of the sno property.</param>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        /// <param name="place">Initial value of the Place property.</param>
        public static vw_collectionpoint Createvw_collectionpoint(global::System.Int64 sno, global::System.String department_Name, global::System.String place)
        {
            vw_collectionpoint vw_collectionpoint = new vw_collectionpoint();
            vw_collectionpoint.sno = sno;
            vw_collectionpoint.Department_Name = department_Name;
            vw_collectionpoint.Place = place;
            return vw_collectionpoint;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 sno
        {
            get
            {
                return _sno;
            }
            set
            {
                if (_sno != value)
                {
                    OnsnoChanging(value);
                    ReportPropertyChanging("sno");
                    _sno = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("sno");
                    OnsnoChanged();
                }
            }
        }
        private global::System.Int64 _sno;
        partial void OnsnoChanging(global::System.Int64 value);
        partial void OnsnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                if (_Department_Name != value)
                {
                    OnDepartment_NameChanging(value);
                    ReportPropertyChanging("Department_Name");
                    _Department_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_Name");
                    OnDepartment_NameChanged();
                }
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Place
        {
            get
            {
                return _Place;
            }
            set
            {
                if (_Place != value)
                {
                    OnPlaceChanging(value);
                    ReportPropertyChanging("Place");
                    _Place = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Place");
                    OnPlaceChanged();
                }
            }
        }
        private global::System.String _Place;
        partial void OnPlaceChanging(global::System.String value);
        partial void OnPlaceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="vw_departmentRequests")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_departmentRequests : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_departmentRequests object.
        /// </summary>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        public static vw_departmentRequests Createvw_departmentRequests(global::System.String item_Code, global::System.String department_Name)
        {
            vw_departmentRequests vw_departmentRequests = new vw_departmentRequests();
            vw_departmentRequests.Item_Code = item_Code;
            vw_departmentRequests.Department_Name = department_Name;
            return vw_departmentRequests;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                if (_Item_Code != value)
                {
                    OnItem_CodeChanging(value);
                    ReportPropertyChanging("Item_Code");
                    _Item_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Item_Code");
                    OnItem_CodeChanged();
                }
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Item
        {
            get
            {
                return _Item;
            }
            set
            {
                OnItemChanging(value);
                ReportPropertyChanging("Item");
                _Item = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Item");
                OnItemChanged();
            }
        }
        private global::System.String _Item;
        partial void OnItemChanging(global::System.String value);
        partial void OnItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Requested_Quantity
        {
            get
            {
                return _Requested_Quantity;
            }
            set
            {
                OnRequested_QuantityChanging(value);
                ReportPropertyChanging("Requested_Quantity");
                _Requested_Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Requested_Quantity");
                OnRequested_QuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Requested_Quantity;
        partial void OnRequested_QuantityChanging(Nullable<global::System.Int32> value);
        partial void OnRequested_QuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                if (_Department_Name != value)
                {
                    OnDepartment_NameChanging(value);
                    ReportPropertyChanging("Department_Name");
                    _Department_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_Name");
                    OnDepartment_NameChanged();
                }
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="vw_deptreq")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_deptreq : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_deptreq object.
        /// </summary>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        /// <param name="place">Initial value of the Place property.</param>
        public static vw_deptreq Createvw_deptreq(global::System.String department_Name, global::System.String place)
        {
            vw_deptreq vw_deptreq = new vw_deptreq();
            vw_deptreq.Department_Name = department_Name;
            vw_deptreq.Place = place;
            return vw_deptreq;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Item
        {
            get
            {
                return _Item;
            }
            set
            {
                OnItemChanging(value);
                ReportPropertyChanging("Item");
                _Item = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Item");
                OnItemChanged();
            }
        }
        private global::System.String _Item;
        partial void OnItemChanging(global::System.String value);
        partial void OnItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Requested_Quantity
        {
            get
            {
                return _Requested_Quantity;
            }
            set
            {
                OnRequested_QuantityChanging(value);
                ReportPropertyChanging("Requested_Quantity");
                _Requested_Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Requested_Quantity");
                OnRequested_QuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Requested_Quantity;
        partial void OnRequested_QuantityChanging(Nullable<global::System.Int32> value);
        partial void OnRequested_QuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                if (_Department_Name != value)
                {
                    OnDepartment_NameChanging(value);
                    ReportPropertyChanging("Department_Name");
                    _Department_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_Name");
                    OnDepartment_NameChanged();
                }
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Place
        {
            get
            {
                return _Place;
            }
            set
            {
                if (_Place != value)
                {
                    OnPlaceChanging(value);
                    ReportPropertyChanging("Place");
                    _Place = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Place");
                    OnPlaceChanged();
                }
            }
        }
        private global::System.String _Place;
        partial void OnPlaceChanging(global::System.String value);
        partial void OnPlaceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="vw_disbursement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_disbursement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_disbursement object.
        /// </summary>
        /// <param name="billNo">Initial value of the BillNo property.</param>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        /// <param name="category_Name">Initial value of the Category_Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="alloted">Initial value of the Alloted property.</param>
        /// <param name="pending_Qty">Initial value of the Pending_Qty property.</param>
        /// <param name="collectionPoint">Initial value of the CollectionPoint property.</param>
        public static vw_disbursement Createvw_disbursement(global::System.Int32 billNo, global::System.String department_Name, global::System.String category_Name, global::System.Int32 quantity, global::System.Int32 alloted, global::System.Int32 pending_Qty, global::System.String collectionPoint)
        {
            vw_disbursement vw_disbursement = new vw_disbursement();
            vw_disbursement.BillNo = billNo;
            vw_disbursement.Department_Name = department_Name;
            vw_disbursement.Category_Name = category_Name;
            vw_disbursement.Quantity = quantity;
            vw_disbursement.Alloted = alloted;
            vw_disbursement.Pending_Qty = pending_Qty;
            vw_disbursement.CollectionPoint = collectionPoint;
            return vw_disbursement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BillNo
        {
            get
            {
                return _BillNo;
            }
            set
            {
                if (_BillNo != value)
                {
                    OnBillNoChanging(value);
                    ReportPropertyChanging("BillNo");
                    _BillNo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillNo");
                    OnBillNoChanged();
                }
            }
        }
        private global::System.Int32 _BillNo;
        partial void OnBillNoChanging(global::System.Int32 value);
        partial void OnBillNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                if (_Department_Name != value)
                {
                    OnDepartment_NameChanging(value);
                    ReportPropertyChanging("Department_Name");
                    _Department_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_Name");
                    OnDepartment_NameChanged();
                }
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category_Name
        {
            get
            {
                return _Category_Name;
            }
            set
            {
                if (_Category_Name != value)
                {
                    OnCategory_NameChanging(value);
                    ReportPropertyChanging("Category_Name");
                    _Category_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Category_Name");
                    OnCategory_NameChanged();
                }
            }
        }
        private global::System.String _Category_Name;
        partial void OnCategory_NameChanging(global::System.String value);
        partial void OnCategory_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    OnQuantityChanging(value);
                    ReportPropertyChanging("Quantity");
                    _Quantity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Quantity");
                    OnQuantityChanged();
                }
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Alloted
        {
            get
            {
                return _Alloted;
            }
            set
            {
                if (_Alloted != value)
                {
                    OnAllotedChanging(value);
                    ReportPropertyChanging("Alloted");
                    _Alloted = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Alloted");
                    OnAllotedChanged();
                }
            }
        }
        private global::System.Int32 _Alloted;
        partial void OnAllotedChanging(global::System.Int32 value);
        partial void OnAllotedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Pending_Qty
        {
            get
            {
                return _Pending_Qty;
            }
            set
            {
                if (_Pending_Qty != value)
                {
                    OnPending_QtyChanging(value);
                    ReportPropertyChanging("Pending_Qty");
                    _Pending_Qty = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Pending_Qty");
                    OnPending_QtyChanged();
                }
            }
        }
        private global::System.Int32 _Pending_Qty;
        partial void OnPending_QtyChanging(global::System.Int32 value);
        partial void OnPending_QtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CollectionPoint
        {
            get
            {
                return _CollectionPoint;
            }
            set
            {
                if (_CollectionPoint != value)
                {
                    OnCollectionPointChanging(value);
                    ReportPropertyChanging("CollectionPoint");
                    _CollectionPoint = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CollectionPoint");
                    OnCollectionPointChanged();
                }
            }
        }
        private global::System.String _CollectionPoint;
        partial void OnCollectionPointChanging(global::System.String value);
        partial void OnCollectionPointChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="vw_generatepending")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_generatepending : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_generatepending object.
        /// </summary>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        /// <param name="category_Name">Initial value of the Category_Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static vw_generatepending Createvw_generatepending(global::System.String department_Name, global::System.String category_Name, global::System.Int32 quantity)
        {
            vw_generatepending vw_generatepending = new vw_generatepending();
            vw_generatepending.Department_Name = department_Name;
            vw_generatepending.Category_Name = category_Name;
            vw_generatepending.Quantity = quantity;
            return vw_generatepending;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                if (_Department_Name != value)
                {
                    OnDepartment_NameChanging(value);
                    ReportPropertyChanging("Department_Name");
                    _Department_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_Name");
                    OnDepartment_NameChanged();
                }
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category_Name
        {
            get
            {
                return _Category_Name;
            }
            set
            {
                if (_Category_Name != value)
                {
                    OnCategory_NameChanging(value);
                    ReportPropertyChanging("Category_Name");
                    _Category_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Category_Name");
                    OnCategory_NameChanged();
                }
            }
        }
        private global::System.String _Category_Name;
        partial void OnCategory_NameChanging(global::System.String value);
        partial void OnCategory_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    OnQuantityChanging(value);
                    ReportPropertyChanging("Quantity");
                    _Quantity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Quantity");
                    OnQuantityChanged();
                }
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="vw_pending")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_pending : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_pending object.
        /// </summary>
        /// <param name="pendingID">Initial value of the PendingID property.</param>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static vw_pending Createvw_pending(global::System.Int32 pendingID, global::System.String department_Name, global::System.Int32 quantity)
        {
            vw_pending vw_pending = new vw_pending();
            vw_pending.PendingID = pendingID;
            vw_pending.Department_Name = department_Name;
            vw_pending.Quantity = quantity;
            return vw_pending;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PendingID
        {
            get
            {
                return _PendingID;
            }
            set
            {
                if (_PendingID != value)
                {
                    OnPendingIDChanging(value);
                    ReportPropertyChanging("PendingID");
                    _PendingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PendingID");
                    OnPendingIDChanged();
                }
            }
        }
        private global::System.Int32 _PendingID;
        partial void OnPendingIDChanging(global::System.Int32 value);
        partial void OnPendingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                if (_Department_Name != value)
                {
                    OnDepartment_NameChanging(value);
                    ReportPropertyChanging("Department_Name");
                    _Department_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_Name");
                    OnDepartment_NameChanged();
                }
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Item
        {
            get
            {
                return _Item;
            }
            set
            {
                OnItemChanging(value);
                ReportPropertyChanging("Item");
                _Item = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Item");
                OnItemChanged();
            }
        }
        private global::System.String _Item;
        partial void OnItemChanging(global::System.String value);
        partial void OnItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    OnQuantityChanging(value);
                    ReportPropertyChanging("Quantity");
                    _Quantity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Quantity");
                    OnQuantityChanged();
                }
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="vw_pending_retrival")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_pending_retrival : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_pending_retrival object.
        /// </summary>
        /// <param name="pendingReference">Initial value of the PendingReference property.</param>
        /// <param name="dept_Code">Initial value of the Dept_Code property.</param>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static vw_pending_retrival Createvw_pending_retrival(global::System.Int32 pendingReference, global::System.String dept_Code, global::System.String item_Code, global::System.Int32 quantity)
        {
            vw_pending_retrival vw_pending_retrival = new vw_pending_retrival();
            vw_pending_retrival.PendingReference = pendingReference;
            vw_pending_retrival.Dept_Code = dept_Code;
            vw_pending_retrival.Item_Code = item_Code;
            vw_pending_retrival.Quantity = quantity;
            return vw_pending_retrival;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PendingReference
        {
            get
            {
                return _PendingReference;
            }
            set
            {
                if (_PendingReference != value)
                {
                    OnPendingReferenceChanging(value);
                    ReportPropertyChanging("PendingReference");
                    _PendingReference = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PendingReference");
                    OnPendingReferenceChanged();
                }
            }
        }
        private global::System.Int32 _PendingReference;
        partial void OnPendingReferenceChanging(global::System.Int32 value);
        partial void OnPendingReferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Dept_Code
        {
            get
            {
                return _Dept_Code;
            }
            set
            {
                if (_Dept_Code != value)
                {
                    OnDept_CodeChanging(value);
                    ReportPropertyChanging("Dept_Code");
                    _Dept_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Dept_Code");
                    OnDept_CodeChanged();
                }
            }
        }
        private global::System.String _Dept_Code;
        partial void OnDept_CodeChanging(global::System.String value);
        partial void OnDept_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                if (_Item_Code != value)
                {
                    OnItem_CodeChanging(value);
                    ReportPropertyChanging("Item_Code");
                    _Item_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Item_Code");
                    OnItem_CodeChanged();
                }
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    OnQuantityChanging(value);
                    ReportPropertyChanging("Quantity");
                    _Quantity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Quantity");
                    OnQuantityChanged();
                }
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="vw_pendingbyDepartment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_pendingbyDepartment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_pendingbyDepartment object.
        /// </summary>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        /// <param name="category_Name">Initial value of the Category_Name property.</param>
        public static vw_pendingbyDepartment Createvw_pendingbyDepartment(global::System.String department_Name, global::System.String category_Name)
        {
            vw_pendingbyDepartment vw_pendingbyDepartment = new vw_pendingbyDepartment();
            vw_pendingbyDepartment.Department_Name = department_Name;
            vw_pendingbyDepartment.Category_Name = category_Name;
            return vw_pendingbyDepartment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                if (_Department_Name != value)
                {
                    OnDepartment_NameChanging(value);
                    ReportPropertyChanging("Department_Name");
                    _Department_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Department_Name");
                    OnDepartment_NameChanged();
                }
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category_Name
        {
            get
            {
                return _Category_Name;
            }
            set
            {
                if (_Category_Name != value)
                {
                    OnCategory_NameChanging(value);
                    ReportPropertyChanging("Category_Name");
                    _Category_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Category_Name");
                    OnCategory_NameChanged();
                }
            }
        }
        private global::System.String _Category_Name;
        partial void OnCategory_NameChanging(global::System.String value);
        partial void OnCategory_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PendingQuantity
        {
            get
            {
                return _PendingQuantity;
            }
            set
            {
                OnPendingQuantityChanging(value);
                ReportPropertyChanging("PendingQuantity");
                _PendingQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PendingQuantity");
                OnPendingQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _PendingQuantity;
        partial void OnPendingQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnPendingQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="vw_pendingitem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_pendingitem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_pendingitem object.
        /// </summary>
        /// <param name="category_Name">Initial value of the Category_Name property.</param>
        public static vw_pendingitem Createvw_pendingitem(global::System.String category_Name)
        {
            vw_pendingitem vw_pendingitem = new vw_pendingitem();
            vw_pendingitem.Category_Name = category_Name;
            return vw_pendingitem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category_Name
        {
            get
            {
                return _Category_Name;
            }
            set
            {
                if (_Category_Name != value)
                {
                    OnCategory_NameChanging(value);
                    ReportPropertyChanging("Category_Name");
                    _Category_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Category_Name");
                    OnCategory_NameChanged();
                }
            }
        }
        private global::System.String _Category_Name;
        partial void OnCategory_NameChanging(global::System.String value);
        partial void OnCategory_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PendingQuantity
        {
            get
            {
                return _PendingQuantity;
            }
            set
            {
                OnPendingQuantityChanging(value);
                ReportPropertyChanging("PendingQuantity");
                _PendingQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PendingQuantity");
                OnPendingQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _PendingQuantity;
        partial void OnPendingQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnPendingQuantityChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="vw_requested")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_requested : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_requested object.
        /// </summary>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        public static vw_requested Createvw_requested(global::System.String item_Code)
        {
            vw_requested vw_requested = new vw_requested();
            vw_requested.Item_Code = item_Code;
            return vw_requested;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                if (_Item_Code != value)
                {
                    OnItem_CodeChanging(value);
                    ReportPropertyChanging("Item_Code");
                    _Item_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Item_Code");
                    OnItem_CodeChanged();
                }
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Requested_Quantity
        {
            get
            {
                return _Requested_Quantity;
            }
            set
            {
                OnRequested_QuantityChanging(value);
                ReportPropertyChanging("Requested_Quantity");
                _Requested_Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Requested_Quantity");
                OnRequested_QuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Requested_Quantity;
        partial void OnRequested_QuantityChanging(Nullable<global::System.Int32> value);
        partial void OnRequested_QuantityChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="vw_retrieveitems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_retrieveitems : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_retrieveitems object.
        /// </summary>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="category_Name">Initial value of the Category_Name property.</param>
        public static vw_retrieveitems Createvw_retrieveitems(global::System.String item_Code, global::System.String category_Name)
        {
            vw_retrieveitems vw_retrieveitems = new vw_retrieveitems();
            vw_retrieveitems.Item_Code = item_Code;
            vw_retrieveitems.Category_Name = category_Name;
            return vw_retrieveitems;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                if (_Item_Code != value)
                {
                    OnItem_CodeChanging(value);
                    ReportPropertyChanging("Item_Code");
                    _Item_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Item_Code");
                    OnItem_CodeChanged();
                }
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category_Name
        {
            get
            {
                return _Category_Name;
            }
            set
            {
                if (_Category_Name != value)
                {
                    OnCategory_NameChanging(value);
                    ReportPropertyChanging("Category_Name");
                    _Category_Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Category_Name");
                    OnCategory_NameChanged();
                }
            }
        }
        private global::System.String _Category_Name;
        partial void OnCategory_NameChanging(global::System.String value);
        partial void OnCategory_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RequestedQuantity
        {
            get
            {
                return _RequestedQuantity;
            }
            set
            {
                OnRequestedQuantityChanging(value);
                ReportPropertyChanging("RequestedQuantity");
                _RequestedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestedQuantity");
                OnRequestedQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _RequestedQuantity;
        partial void OnRequestedQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnRequestedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RetrievedQuantity
        {
            get
            {
                return _RetrievedQuantity;
            }
            set
            {
                OnRetrievedQuantityChanging(value);
                ReportPropertyChanging("RetrievedQuantity");
                _RetrievedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RetrievedQuantity");
                OnRetrievedQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _RetrievedQuantity;
        partial void OnRetrievedQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnRetrievedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PendingQuantity
        {
            get
            {
                return _PendingQuantity;
            }
            set
            {
                OnPendingQuantityChanging(value);
                ReportPropertyChanging("PendingQuantity");
                _PendingQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PendingQuantity");
                OnPendingQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _PendingQuantity;
        partial void OnPendingQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnPendingQuantityChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Team4_ADModel", Name="vw_StockAdjustHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_StockAdjustHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_StockAdjustHistory object.
        /// </summary>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="adjust_Qty">Initial value of the Adjust_Qty property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static vw_StockAdjustHistory Createvw_StockAdjustHistory(global::System.String item_Code, global::System.Int32 quantity, global::System.Int32 adjust_Qty, global::System.DateTime updateDate)
        {
            vw_StockAdjustHistory vw_StockAdjustHistory = new vw_StockAdjustHistory();
            vw_StockAdjustHistory.Item_Code = item_Code;
            vw_StockAdjustHistory.Quantity = quantity;
            vw_StockAdjustHistory.Adjust_Qty = adjust_Qty;
            vw_StockAdjustHistory.UpdateDate = updateDate;
            return vw_StockAdjustHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                if (_Item_Code != value)
                {
                    OnItem_CodeChanging(value);
                    ReportPropertyChanging("Item_Code");
                    _Item_Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Item_Code");
                    OnItem_CodeChanged();
                }
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    OnQuantityChanging(value);
                    ReportPropertyChanging("Quantity");
                    _Quantity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Quantity");
                    OnQuantityChanged();
                }
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Adjust_Qty
        {
            get
            {
                return _Adjust_Qty;
            }
            set
            {
                if (_Adjust_Qty != value)
                {
                    OnAdjust_QtyChanging(value);
                    ReportPropertyChanging("Adjust_Qty");
                    _Adjust_Qty = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Adjust_Qty");
                    OnAdjust_QtyChanged();
                }
            }
        }
        private global::System.Int32 _Adjust_Qty;
        partial void OnAdjust_QtyChanging(global::System.Int32 value);
        partial void OnAdjust_QtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                if (_UpdateDate != value)
                {
                    OnUpdateDateChanging(value);
                    ReportPropertyChanging("UpdateDate");
                    _UpdateDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UpdateDate");
                    OnUpdateDateChanged();
                }
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion
    
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Team4_ADModel", Name="sp_CurrMonthInfo_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_CurrMonthInfo_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_CurrMonthInfo_Result object.
        /// </summary>
        /// <param name="department_Code">Initial value of the Department_Code property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        /// <param name="months">Initial value of the Months property.</param>
        /// <param name="total_Qty">Initial value of the Total_Qty property.</param>
        public static sp_CurrMonthInfo_Result Createsp_CurrMonthInfo_Result(global::System.String department_Code, global::System.String description, global::System.String department_Name, global::System.Int32 months, global::System.Int32 total_Qty)
        {
            sp_CurrMonthInfo_Result sp_CurrMonthInfo_Result = new sp_CurrMonthInfo_Result();
            sp_CurrMonthInfo_Result.Department_Code = department_Code;
            sp_CurrMonthInfo_Result.Description = description;
            sp_CurrMonthInfo_Result.Department_Name = department_Name;
            sp_CurrMonthInfo_Result.Months = months;
            sp_CurrMonthInfo_Result.Total_Qty = total_Qty;
            return sp_CurrMonthInfo_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Code
        {
            get
            {
                return _Department_Code;
            }
            set
            {
                OnDepartment_CodeChanging(value);
                ReportPropertyChanging("Department_Code");
                _Department_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department_Code");
                OnDepartment_CodeChanged();
            }
        }
        private global::System.String _Department_Code;
        partial void OnDepartment_CodeChanging(global::System.String value);
        partial void OnDepartment_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                OnDepartment_NameChanging(value);
                ReportPropertyChanging("Department_Name");
                _Department_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department_Name");
                OnDepartment_NameChanged();
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Months
        {
            get
            {
                return _Months;
            }
            set
            {
                OnMonthsChanging(value);
                ReportPropertyChanging("Months");
                _Months = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Months");
                OnMonthsChanged();
            }
        }
        private global::System.Int32 _Months;
        partial void OnMonthsChanging(global::System.Int32 value);
        partial void OnMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Total_Qty
        {
            get
            {
                return _Total_Qty;
            }
            set
            {
                OnTotal_QtyChanging(value);
                ReportPropertyChanging("Total_Qty");
                _Total_Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_Qty");
                OnTotal_QtyChanged();
            }
        }
        private global::System.Int32 _Total_Qty;
        partial void OnTotal_QtyChanging(global::System.Int32 value);
        partial void OnTotal_QtyChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Team4_ADModel", Name="sp_CurrMonthPurchase_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_CurrMonthPurchase_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_CurrMonthPurchase_Result object.
        /// </summary>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="category_Name">Initial value of the Category_Name property.</param>
        /// <param name="months">Initial value of the Months property.</param>
        /// <param name="order_Qty">Initial value of the Order_Qty property.</param>
        public static sp_CurrMonthPurchase_Result Createsp_CurrMonthPurchase_Result(global::System.String item_Code, global::System.String description, global::System.String category_Name, global::System.Int32 months, global::System.Int32 order_Qty)
        {
            sp_CurrMonthPurchase_Result sp_CurrMonthPurchase_Result = new sp_CurrMonthPurchase_Result();
            sp_CurrMonthPurchase_Result.Item_Code = item_Code;
            sp_CurrMonthPurchase_Result.Description = description;
            sp_CurrMonthPurchase_Result.Category_Name = category_Name;
            sp_CurrMonthPurchase_Result.Months = months;
            sp_CurrMonthPurchase_Result.Order_Qty = order_Qty;
            return sp_CurrMonthPurchase_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                OnItem_CodeChanging(value);
                ReportPropertyChanging("Item_Code");
                _Item_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Item_Code");
                OnItem_CodeChanged();
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category_Name
        {
            get
            {
                return _Category_Name;
            }
            set
            {
                OnCategory_NameChanging(value);
                ReportPropertyChanging("Category_Name");
                _Category_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category_Name");
                OnCategory_NameChanged();
            }
        }
        private global::System.String _Category_Name;
        partial void OnCategory_NameChanging(global::System.String value);
        partial void OnCategory_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Months
        {
            get
            {
                return _Months;
            }
            set
            {
                OnMonthsChanging(value);
                ReportPropertyChanging("Months");
                _Months = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Months");
                OnMonthsChanged();
            }
        }
        private global::System.Int32 _Months;
        partial void OnMonthsChanging(global::System.Int32 value);
        partial void OnMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Order_Qty
        {
            get
            {
                return _Order_Qty;
            }
            set
            {
                OnOrder_QtyChanging(value);
                ReportPropertyChanging("Order_Qty");
                _Order_Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order_Qty");
                OnOrder_QtyChanged();
            }
        }
        private global::System.Int32 _Order_Qty;
        partial void OnOrder_QtyChanging(global::System.Int32 value);
        partial void OnOrder_QtyChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Team4_ADModel", Name="sp_DeptItemListByThreeMonth_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_DeptItemListByThreeMonth_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_DeptItemListByThreeMonth_Result object.
        /// </summary>
        /// <param name="department_Code">Initial value of the Department_Code property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        /// <param name="months">Initial value of the Months property.</param>
        /// <param name="total_Qty">Initial value of the Total_Qty property.</param>
        public static sp_DeptItemListByThreeMonth_Result Createsp_DeptItemListByThreeMonth_Result(global::System.String department_Code, global::System.String description, global::System.String department_Name, global::System.Int32 months, global::System.Int32 total_Qty)
        {
            sp_DeptItemListByThreeMonth_Result sp_DeptItemListByThreeMonth_Result = new sp_DeptItemListByThreeMonth_Result();
            sp_DeptItemListByThreeMonth_Result.Department_Code = department_Code;
            sp_DeptItemListByThreeMonth_Result.Description = description;
            sp_DeptItemListByThreeMonth_Result.Department_Name = department_Name;
            sp_DeptItemListByThreeMonth_Result.Months = months;
            sp_DeptItemListByThreeMonth_Result.Total_Qty = total_Qty;
            return sp_DeptItemListByThreeMonth_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Code
        {
            get
            {
                return _Department_Code;
            }
            set
            {
                OnDepartment_CodeChanging(value);
                ReportPropertyChanging("Department_Code");
                _Department_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department_Code");
                OnDepartment_CodeChanged();
            }
        }
        private global::System.String _Department_Code;
        partial void OnDepartment_CodeChanging(global::System.String value);
        partial void OnDepartment_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                OnDepartment_NameChanging(value);
                ReportPropertyChanging("Department_Name");
                _Department_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department_Name");
                OnDepartment_NameChanged();
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Months
        {
            get
            {
                return _Months;
            }
            set
            {
                OnMonthsChanging(value);
                ReportPropertyChanging("Months");
                _Months = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Months");
                OnMonthsChanged();
            }
        }
        private global::System.Int32 _Months;
        partial void OnMonthsChanging(global::System.Int32 value);
        partial void OnMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Total_Qty
        {
            get
            {
                return _Total_Qty;
            }
            set
            {
                OnTotal_QtyChanging(value);
                ReportPropertyChanging("Total_Qty");
                _Total_Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_Qty");
                OnTotal_QtyChanged();
            }
        }
        private global::System.Int32 _Total_Qty;
        partial void OnTotal_QtyChanging(global::System.Int32 value);
        partial void OnTotal_QtyChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Team4_ADModel", Name="sp_DeptReqReport_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_DeptReqReport_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_DeptReqReport_Result object.
        /// </summary>
        /// <param name="category_Name">Initial value of the Category_Name property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        /// <param name="months">Initial value of the Months property.</param>
        /// <param name="total_Qty">Initial value of the Total_Qty property.</param>
        public static sp_DeptReqReport_Result Createsp_DeptReqReport_Result(global::System.String category_Name, global::System.Int32 categoryID, global::System.String department_Name, global::System.Int32 months, global::System.Int32 total_Qty)
        {
            sp_DeptReqReport_Result sp_DeptReqReport_Result = new sp_DeptReqReport_Result();
            sp_DeptReqReport_Result.Category_Name = category_Name;
            sp_DeptReqReport_Result.CategoryID = categoryID;
            sp_DeptReqReport_Result.Department_Name = department_Name;
            sp_DeptReqReport_Result.Months = months;
            sp_DeptReqReport_Result.Total_Qty = total_Qty;
            return sp_DeptReqReport_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category_Name
        {
            get
            {
                return _Category_Name;
            }
            set
            {
                OnCategory_NameChanging(value);
                ReportPropertyChanging("Category_Name");
                _Category_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category_Name");
                OnCategory_NameChanged();
            }
        }
        private global::System.String _Category_Name;
        partial void OnCategory_NameChanging(global::System.String value);
        partial void OnCategory_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                OnDepartment_NameChanging(value);
                ReportPropertyChanging("Department_Name");
                _Department_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department_Name");
                OnDepartment_NameChanged();
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Months
        {
            get
            {
                return _Months;
            }
            set
            {
                OnMonthsChanging(value);
                ReportPropertyChanging("Months");
                _Months = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Months");
                OnMonthsChanged();
            }
        }
        private global::System.Int32 _Months;
        partial void OnMonthsChanging(global::System.Int32 value);
        partial void OnMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Total_Qty
        {
            get
            {
                return _Total_Qty;
            }
            set
            {
                OnTotal_QtyChanging(value);
                ReportPropertyChanging("Total_Qty");
                _Total_Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_Qty");
                OnTotal_QtyChanged();
            }
        }
        private global::System.Int32 _Total_Qty;
        partial void OnTotal_QtyChanging(global::System.Int32 value);
        partial void OnTotal_QtyChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Team4_ADModel", Name="sp_DeptReqReportByStatus_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_DeptReqReportByStatus_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_DeptReqReportByStatus_Result object.
        /// </summary>
        /// <param name="category_Name">Initial value of the Category_Name property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="months">Initial value of the Months property.</param>
        /// <param name="total_Qty">Initial value of the Total_Qty property.</param>
        public static sp_DeptReqReportByStatus_Result Createsp_DeptReqReportByStatus_Result(global::System.String category_Name, global::System.Int32 categoryID, global::System.String department_Name, global::System.String status, global::System.Int32 months, global::System.Int32 total_Qty)
        {
            sp_DeptReqReportByStatus_Result sp_DeptReqReportByStatus_Result = new sp_DeptReqReportByStatus_Result();
            sp_DeptReqReportByStatus_Result.Category_Name = category_Name;
            sp_DeptReqReportByStatus_Result.CategoryID = categoryID;
            sp_DeptReqReportByStatus_Result.Department_Name = department_Name;
            sp_DeptReqReportByStatus_Result.Status = status;
            sp_DeptReqReportByStatus_Result.Months = months;
            sp_DeptReqReportByStatus_Result.Total_Qty = total_Qty;
            return sp_DeptReqReportByStatus_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category_Name
        {
            get
            {
                return _Category_Name;
            }
            set
            {
                OnCategory_NameChanging(value);
                ReportPropertyChanging("Category_Name");
                _Category_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category_Name");
                OnCategory_NameChanged();
            }
        }
        private global::System.String _Category_Name;
        partial void OnCategory_NameChanging(global::System.String value);
        partial void OnCategory_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                OnDepartment_NameChanging(value);
                ReportPropertyChanging("Department_Name");
                _Department_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department_Name");
                OnDepartment_NameChanged();
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Months
        {
            get
            {
                return _Months;
            }
            set
            {
                OnMonthsChanging(value);
                ReportPropertyChanging("Months");
                _Months = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Months");
                OnMonthsChanged();
            }
        }
        private global::System.Int32 _Months;
        partial void OnMonthsChanging(global::System.Int32 value);
        partial void OnMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Total_Qty
        {
            get
            {
                return _Total_Qty;
            }
            set
            {
                OnTotal_QtyChanging(value);
                ReportPropertyChanging("Total_Qty");
                _Total_Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_Qty");
                OnTotal_QtyChanged();
            }
        }
        private global::System.Int32 _Total_Qty;
        partial void OnTotal_QtyChanging(global::System.Int32 value);
        partial void OnTotal_QtyChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Team4_ADModel", Name="sp_DeptReqReportByStatusThree_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_DeptReqReportByStatusThree_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_DeptReqReportByStatusThree_Result object.
        /// </summary>
        /// <param name="category_Name">Initial value of the Category_Name property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        /// <param name="months">Initial value of the Months property.</param>
        /// <param name="total_Qty">Initial value of the Total_Qty property.</param>
        public static sp_DeptReqReportByStatusThree_Result Createsp_DeptReqReportByStatusThree_Result(global::System.String category_Name, global::System.Int32 categoryID, global::System.String department_Name, global::System.Int32 months, global::System.Int32 total_Qty)
        {
            sp_DeptReqReportByStatusThree_Result sp_DeptReqReportByStatusThree_Result = new sp_DeptReqReportByStatusThree_Result();
            sp_DeptReqReportByStatusThree_Result.Category_Name = category_Name;
            sp_DeptReqReportByStatusThree_Result.CategoryID = categoryID;
            sp_DeptReqReportByStatusThree_Result.Department_Name = department_Name;
            sp_DeptReqReportByStatusThree_Result.Months = months;
            sp_DeptReqReportByStatusThree_Result.Total_Qty = total_Qty;
            return sp_DeptReqReportByStatusThree_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category_Name
        {
            get
            {
                return _Category_Name;
            }
            set
            {
                OnCategory_NameChanging(value);
                ReportPropertyChanging("Category_Name");
                _Category_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category_Name");
                OnCategory_NameChanged();
            }
        }
        private global::System.String _Category_Name;
        partial void OnCategory_NameChanging(global::System.String value);
        partial void OnCategory_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                OnDepartment_NameChanging(value);
                ReportPropertyChanging("Department_Name");
                _Department_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department_Name");
                OnDepartment_NameChanged();
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Months
        {
            get
            {
                return _Months;
            }
            set
            {
                OnMonthsChanging(value);
                ReportPropertyChanging("Months");
                _Months = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Months");
                OnMonthsChanged();
            }
        }
        private global::System.Int32 _Months;
        partial void OnMonthsChanging(global::System.Int32 value);
        partial void OnMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Total_Qty
        {
            get
            {
                return _Total_Qty;
            }
            set
            {
                OnTotal_QtyChanging(value);
                ReportPropertyChanging("Total_Qty");
                _Total_Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_Qty");
                OnTotal_QtyChanged();
            }
        }
        private global::System.Int32 _Total_Qty;
        partial void OnTotal_QtyChanging(global::System.Int32 value);
        partial void OnTotal_QtyChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Team4_ADModel", Name="sp_DeptReqReportByThree_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_DeptReqReportByThree_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_DeptReqReportByThree_Result object.
        /// </summary>
        /// <param name="category_Name">Initial value of the Category_Name property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="department_Name">Initial value of the Department_Name property.</param>
        /// <param name="months">Initial value of the Months property.</param>
        /// <param name="total_Qty">Initial value of the Total_Qty property.</param>
        public static sp_DeptReqReportByThree_Result Createsp_DeptReqReportByThree_Result(global::System.String category_Name, global::System.Int32 categoryID, global::System.String department_Name, global::System.Int32 months, global::System.Int32 total_Qty)
        {
            sp_DeptReqReportByThree_Result sp_DeptReqReportByThree_Result = new sp_DeptReqReportByThree_Result();
            sp_DeptReqReportByThree_Result.Category_Name = category_Name;
            sp_DeptReqReportByThree_Result.CategoryID = categoryID;
            sp_DeptReqReportByThree_Result.Department_Name = department_Name;
            sp_DeptReqReportByThree_Result.Months = months;
            sp_DeptReqReportByThree_Result.Total_Qty = total_Qty;
            return sp_DeptReqReportByThree_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category_Name
        {
            get
            {
                return _Category_Name;
            }
            set
            {
                OnCategory_NameChanging(value);
                ReportPropertyChanging("Category_Name");
                _Category_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category_Name");
                OnCategory_NameChanged();
            }
        }
        private global::System.String _Category_Name;
        partial void OnCategory_NameChanging(global::System.String value);
        partial void OnCategory_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department_Name
        {
            get
            {
                return _Department_Name;
            }
            set
            {
                OnDepartment_NameChanging(value);
                ReportPropertyChanging("Department_Name");
                _Department_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department_Name");
                OnDepartment_NameChanged();
            }
        }
        private global::System.String _Department_Name;
        partial void OnDepartment_NameChanging(global::System.String value);
        partial void OnDepartment_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Months
        {
            get
            {
                return _Months;
            }
            set
            {
                OnMonthsChanging(value);
                ReportPropertyChanging("Months");
                _Months = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Months");
                OnMonthsChanged();
            }
        }
        private global::System.Int32 _Months;
        partial void OnMonthsChanging(global::System.Int32 value);
        partial void OnMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Total_Qty
        {
            get
            {
                return _Total_Qty;
            }
            set
            {
                OnTotal_QtyChanging(value);
                ReportPropertyChanging("Total_Qty");
                _Total_Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total_Qty");
                OnTotal_QtyChanged();
            }
        }
        private global::System.Int32 _Total_Qty;
        partial void OnTotal_QtyChanging(global::System.Int32 value);
        partial void OnTotal_QtyChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Team4_ADModel", Name="sp_PurchaseCatByThree_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_PurchaseCatByThree_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_PurchaseCatByThree_Result object.
        /// </summary>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="category_Name">Initial value of the Category_Name property.</param>
        /// <param name="months">Initial value of the Months property.</param>
        /// <param name="order_Qty">Initial value of the Order_Qty property.</param>
        public static sp_PurchaseCatByThree_Result Createsp_PurchaseCatByThree_Result(global::System.String item_Code, global::System.String description, global::System.String category_Name, global::System.Int32 months, global::System.Int32 order_Qty)
        {
            sp_PurchaseCatByThree_Result sp_PurchaseCatByThree_Result = new sp_PurchaseCatByThree_Result();
            sp_PurchaseCatByThree_Result.Item_Code = item_Code;
            sp_PurchaseCatByThree_Result.Description = description;
            sp_PurchaseCatByThree_Result.Category_Name = category_Name;
            sp_PurchaseCatByThree_Result.Months = months;
            sp_PurchaseCatByThree_Result.Order_Qty = order_Qty;
            return sp_PurchaseCatByThree_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                OnItem_CodeChanging(value);
                ReportPropertyChanging("Item_Code");
                _Item_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Item_Code");
                OnItem_CodeChanged();
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category_Name
        {
            get
            {
                return _Category_Name;
            }
            set
            {
                OnCategory_NameChanging(value);
                ReportPropertyChanging("Category_Name");
                _Category_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category_Name");
                OnCategory_NameChanged();
            }
        }
        private global::System.String _Category_Name;
        partial void OnCategory_NameChanging(global::System.String value);
        partial void OnCategory_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Months
        {
            get
            {
                return _Months;
            }
            set
            {
                OnMonthsChanging(value);
                ReportPropertyChanging("Months");
                _Months = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Months");
                OnMonthsChanged();
            }
        }
        private global::System.Int32 _Months;
        partial void OnMonthsChanging(global::System.Int32 value);
        partial void OnMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Order_Qty
        {
            get
            {
                return _Order_Qty;
            }
            set
            {
                OnOrder_QtyChanging(value);
                ReportPropertyChanging("Order_Qty");
                _Order_Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order_Qty");
                OnOrder_QtyChanged();
            }
        }
        private global::System.Int32 _Order_Qty;
        partial void OnOrder_QtyChanging(global::System.Int32 value);
        partial void OnOrder_QtyChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Team4_ADModel", Name="sp_StockAdjustmentHistory_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_StockAdjustmentHistory_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_StockAdjustmentHistory_Result object.
        /// </summary>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static sp_StockAdjustmentHistory_Result Createsp_StockAdjustmentHistory_Result(global::System.String item_Code, global::System.String description, global::System.Int32 quantity, global::System.DateTime updateDate)
        {
            sp_StockAdjustmentHistory_Result sp_StockAdjustmentHistory_Result = new sp_StockAdjustmentHistory_Result();
            sp_StockAdjustmentHistory_Result.Item_Code = item_Code;
            sp_StockAdjustmentHistory_Result.Description = description;
            sp_StockAdjustmentHistory_Result.Quantity = quantity;
            sp_StockAdjustmentHistory_Result.UpdateDate = updateDate;
            return sp_StockAdjustmentHistory_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                OnItem_CodeChanging(value);
                ReportPropertyChanging("Item_Code");
                _Item_Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Item_Code");
                OnItem_CodeChanged();
            }
        }
        private global::System.String _Item_Code;
        partial void OnItem_CodeChanging(global::System.String value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion
    }

    #endregion
    
}
